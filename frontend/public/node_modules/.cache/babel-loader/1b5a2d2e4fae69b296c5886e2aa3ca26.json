{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useGetBishopMoves from \"./Piece moves/Bishop\";\nimport useGetRookMoves from \"./Piece moves/Rook\";\nimport useGetKnightMoves from \"./Piece moves/Knight\";\nimport useGetKingMoves from \"./Piece moves/King\";\nimport useGetPawnMoves from \"./Piece moves/Pawn\";\nimport useFilterMoves from \"./Filtration\";\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function useGetNextMove(_ref) {\n  _s();\n\n  let [x, y] = _ref;\n  // const { gameField } = useSelector(store => store.chess) \n  let piece = gameField[y][x]; // const steps = {\n  //     \"K\": useGetKingMoves(x, y),\n  //     \"N\": useGetKnightMoves(x, y),\n  //     \"Q\": [...useGetBishopMoves(x, y), ...useGetRookMoves(x, y)],\n  //     \"B\": useGetBishopMoves(x, y),\n  //     \"R\": useGetRookMoves(x, y),\n  //     \"P\": useGetPawnMoves(x, y),\n  // }\n\n  const steps = {\n    \"K\": [],\n    \"N\": [],\n    \"Q\": [],\n    \"B\": [],\n    \"R\": [],\n    \"P\": []\n  };\n  const filteredMoves = useFilterMoves(x, y, steps[piece[1]]);\n  return filteredMoves;\n}\n\n_s(useGetNextMove, \"9BExKrROisQgipU2nBjTADqBlf8=\", false, function () {\n  return [useFilterMoves];\n});","map":{"version":3,"names":["useGetBishopMoves","useGetRookMoves","useGetKnightMoves","useGetKingMoves","useGetPawnMoves","useFilterMoves","useDispatch","useSelector","useGetNextMove","x","y","piece","gameField","steps","filteredMoves"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/NextMoves.js"],"sourcesContent":["import useGetBishopMoves from \"./Piece moves/Bishop\";\r\nimport useGetRookMoves from \"./Piece moves/Rook\";\r\nimport useGetKnightMoves from \"./Piece moves/Knight\";\r\nimport useGetKingMoves from \"./Piece moves/King\";\r\nimport useGetPawnMoves from \"./Piece moves/Pawn\";\r\nimport useFilterMoves from \"./Filtration\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function useGetNextMove([x,y]){\r\n\r\n    // const { gameField } = useSelector(store => store.chess) \r\n    let piece = gameField[y][x]\r\n\r\n    // const steps = {\r\n    //     \"K\": useGetKingMoves(x, y),\r\n    //     \"N\": useGetKnightMoves(x, y),\r\n    //     \"Q\": [...useGetBishopMoves(x, y), ...useGetRookMoves(x, y)],\r\n    //     \"B\": useGetBishopMoves(x, y),\r\n    //     \"R\": useGetRookMoves(x, y),\r\n    //     \"P\": useGetPawnMoves(x, y),\r\n    // }\r\n    const steps = {\r\n        \"K\": [],\r\n        \"N\": [],\r\n        \"Q\": [],\r\n        \"B\": [],\r\n        \"R\": [],\r\n        \"P\": [],\r\n    }\r\n\r\n    const filteredMoves = useFilterMoves(x, y, steps[piece[1]])\r\n\r\n    return filteredMoves\r\n    \r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,SAASC,cAAT,OAA8B;EAAA;;EAAA,IAAN,CAACC,CAAD,EAAGC,CAAH,CAAM;EAEzC;EACA,IAAIC,KAAK,GAAGC,SAAS,CAACF,CAAD,CAAT,CAAaD,CAAb,CAAZ,CAHyC,CAKzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMI,KAAK,GAAG;IACV,KAAK,EADK;IAEV,KAAK,EAFK;IAGV,KAAK,EAHK;IAIV,KAAK,EAJK;IAKV,KAAK,EALK;IAMV,KAAK;EANK,CAAd;EASA,MAAMC,aAAa,GAAGT,cAAc,CAACI,CAAD,EAAIC,CAAJ,EAAOG,KAAK,CAACF,KAAK,CAAC,CAAD,CAAN,CAAZ,CAApC;EAEA,OAAOG,aAAP;AAEH;;GA1BuBN,c;UAsBEH,c"},"metadata":{},"sourceType":"module"}