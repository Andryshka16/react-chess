{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { clearField } from \"../../../Indicators/ShowNextMoves\";\nimport togglePointerEvents from \"../Pawn promotion/togglePointerEvents\";\nimport doCastling from \"./Related with king/Castle king\";\nimport removePiece from \"./Remove piece\";\nimport maybeCastlingPiecesMoved from \"./Related with king/Mby castling pieces moved\";\nimport updateState from \"./Update state\";\nimport { recentPieceCrd } from \"../../piece\";\nimport { gameField } from \"../../Gamefield\";\nimport { setPromoted } from \"../Pawn promotion/Promotion\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearNextMoves, setCheck, setTurn } from '../../../../../features/chess/chessSlice';\nexport let turn = \"w\";\nexport const updateTurn = value => turn = value;\nexport const turns = {\n  \"w\": \"b\",\n  \"b\": \"w\"\n};\nexport let enPassing;\nexport let castlingMoved = [];\nexport let clearCastlingMoved = () => castlingMoved = [];\nexport default function useMovePiece(x2, y2) {\n  _s();\n\n  // clearField()\n  const dispatch = useDispatch();\n  dispatch(clearNextMoves());\n  dispatch(setCheck(false));\n  dispatch(setTurn());\n  const {\n    gameField,\n    nextMoves\n  } = useSelector(store => store.chess);\n  let [x1, y1, [color, name], piece, setPiece] = recentPieceCrd;\n  updateTurn(turns[turn]); // setCheck(false)\n\n  if (name === \"K\" && Math.abs(x2 - x1) > 1) {\n    updateState(doCastling, [x2, y2], true);\n    return;\n  }\n\n  if (gameField[y2][x2] !== \"0\") {\n    removePiece(x2, y2);\n  } else if (name === \"P\" && x1 !== x2 && gameField[y2][x2] === \"0\") {\n    removePiece(x2, y1);\n  }\n\n  enPassing = name === \"P\" && Math.abs(y2 - y1) === 2 ? {\n    x: x2,\n    y: y2\n  } : false;\n\n  if (name === \"P\" && (y2 === 7 || y2 === 0)) {\n    setPromoted([x2, y2]);\n    togglePointerEvents(\"none\");\n  }\n\n  maybeCastlingPiecesMoved(color, name, x1);\n  updateState(setPiece, {\n    x: x2,\n    y: y2,\n    from: {\n      x: x1,\n      y: y1\n    }\n  });\n}\n\n_s(useMovePiece, \"2TF+q+IZtR9oih6IRYQYuUZXIJk=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["clearField","togglePointerEvents","doCastling","removePiece","maybeCastlingPiecesMoved","updateState","recentPieceCrd","gameField","setPromoted","useDispatch","useSelector","clearNextMoves","setCheck","setTurn","turn","updateTurn","value","turns","enPassing","castlingMoved","clearCastlingMoved","useMovePiece","x2","y2","dispatch","nextMoves","store","chess","x1","y1","color","name","piece","setPiece","Math","abs","x","y","from"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Move piece/Move piece.js"],"sourcesContent":["import {clearField} from \"../../../Indicators/ShowNextMoves\";\r\nimport togglePointerEvents from \"../Pawn promotion/togglePointerEvents\";\r\nimport doCastling from \"./Related with king/Castle king\";\r\nimport removePiece from \"./Remove piece\";\r\nimport maybeCastlingPiecesMoved from \"./Related with king/Mby castling pieces moved\";\r\nimport updateState from \"./Update state\";\r\nimport {recentPieceCrd} from \"../../piece\";\r\nimport {gameField} from \"../../Gamefield\";\r\nimport {setPromoted} from \"../Pawn promotion/Promotion\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearNextMoves,setCheck, setTurn } from '../../../../../features/chess/chessSlice';\r\n\r\nexport let turn = \"w\"\r\nexport const updateTurn = value => turn = value\r\nexport const turns = {\"w\": \"b\", \"b\": \"w\"}\r\n\r\nexport let enPassing\r\nexport let castlingMoved = []\r\nexport let clearCastlingMoved = () => castlingMoved = []\r\n\r\nexport default function useMovePiece(x2, y2){\r\n\r\n    // clearField()\r\n    const dispatch = useDispatch()\r\n\r\n    dispatch(clearNextMoves())\r\n    dispatch(setCheck(false))\r\n    dispatch(setTurn())\r\n    const {gameField, nextMoves} = useSelector(store => store.chess)\r\n\r\n    let [x1, y1, [color, name], piece, setPiece] = recentPieceCrd\r\n\r\n    updateTurn(turns[turn])\r\n    // setCheck(false)\r\n\r\n    if (name === \"K\" && Math.abs(x2 - x1) > 1){\r\n        updateState(doCastling, [x2, y2], true)\r\n        return\r\n    }\r\n\r\n    if (gameField[y2][x2] !== \"0\") {\r\n        removePiece(x2, y2)\r\n    }\r\n\r\n    else if (name === \"P\" && x1 !== x2 && gameField[y2][x2] === \"0\"){\r\n        removePiece(x2, y1)\r\n    }\r\n\r\n    enPassing = name === \"P\" &&\r\n        Math.abs(y2 - y1) === 2 ?\r\n            {x: x2, y: y2} : false\r\n\r\n    if (name === \"P\"  && (y2 === 7 || y2 === 0)){\r\n        setPromoted([x2, y2])\r\n        togglePointerEvents(\"none\")\r\n    }\r\n\r\n    maybeCastlingPiecesMoved(color, name, x1)\r\n\r\n    updateState(setPiece,{\r\n            x: x2,\r\n            y: y2,\r\n            from: {x: x1, y: y1}\r\n        })\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}