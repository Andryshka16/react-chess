{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useGetBishopMoves from \"./Piece moves/Bishop\";\nimport useGetRookMoves from \"./Piece moves/Rook\";\nimport useGetKnightMoves from \"./Piece moves/Knight\";\nimport useGetKingMoves from \"./Piece moves/King\";\nimport useGetPawnMoves from \"./Piece moves/Pawn\";\nimport useFilterMoves from \"./Filtration\";\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function useGetNextMove(_ref) {\n  _s();\n\n  let [x, y] = _ref;\n  const {\n    gameField\n  } = useSelector(store => store.chess);\n  let piece = gameField[y][x];\n  const steps = {\n    \"K\": useGetKingMoves(x, y),\n    \"N\": useGetKnightMoves(x, y),\n    \"Q\": [...useGetBishopMoves(x, y), ...useGetRookMoves(x, y)],\n    \"B\": useGetBishopMoves(x, y),\n    \"R\": useGetRookMoves(x, y),\n    \"P\": useGetPawnMoves(x, y)\n  }; // const getFilteredMoves = useFilterMoves(x, y, steps[piece[1]])\n\n  return steps[piece[1]];\n}\n\n_s(useGetNextMove, \"jLbw4uDfzIvzWYnbKZPA3yqfRXI=\", false, function () {\n  return [useSelector, useGetKingMoves, useGetKnightMoves, useGetBishopMoves, useGetRookMoves, useGetBishopMoves, useGetRookMoves, useGetPawnMoves];\n});","map":{"version":3,"names":["useGetBishopMoves","useGetRookMoves","useGetKnightMoves","useGetKingMoves","useGetPawnMoves","useFilterMoves","useDispatch","useSelector","useGetNextMove","x","y","gameField","store","chess","piece","steps"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/NextMoves.js"],"sourcesContent":["import useGetBishopMoves from \"./Piece moves/Bishop\";\r\nimport useGetRookMoves from \"./Piece moves/Rook\";\r\nimport useGetKnightMoves from \"./Piece moves/Knight\";\r\nimport useGetKingMoves from \"./Piece moves/King\";\r\nimport useGetPawnMoves from \"./Piece moves/Pawn\";\r\nimport useFilterMoves from \"./Filtration\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function useGetNextMove([x, y]) {\r\n    \r\n    const { gameField } = useSelector(store => store.chess)\r\n\r\n    let piece = gameField[y][x]\r\n\r\n    const steps = {\r\n        \"K\": useGetKingMoves(x, y),\r\n        \"N\": useGetKnightMoves(x, y),\r\n        \"Q\": [...useGetBishopMoves(x, y), ...useGetRookMoves(x, y)],\r\n        \"B\": useGetBishopMoves(x, y),\r\n        \"R\": useGetRookMoves(x, y),\r\n        \"P\": useGetPawnMoves(x, y),\r\n    }\r\n\r\n\r\n    // const getFilteredMoves = useFilterMoves(x, y, steps[piece[1]])\r\n\r\n    return steps[piece[1]]\r\n    \r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,SAASC,cAAT,OAAgC;EAAA;;EAAA,IAAR,CAACC,CAAD,EAAIC,CAAJ,CAAQ;EAE3C,MAAM;IAAEC;EAAF,IAAgBJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAjC;EAEA,IAAIC,KAAK,GAAGH,SAAS,CAACD,CAAD,CAAT,CAAaD,CAAb,CAAZ;EAEA,MAAMM,KAAK,GAAG;IACV,KAAKZ,eAAe,CAACM,CAAD,EAAIC,CAAJ,CADV;IAEV,KAAKR,iBAAiB,CAACO,CAAD,EAAIC,CAAJ,CAFZ;IAGV,KAAK,CAAC,GAAGV,iBAAiB,CAACS,CAAD,EAAIC,CAAJ,CAArB,EAA6B,GAAGT,eAAe,CAACQ,CAAD,EAAIC,CAAJ,CAA/C,CAHK;IAIV,KAAKV,iBAAiB,CAACS,CAAD,EAAIC,CAAJ,CAJZ;IAKV,KAAKT,eAAe,CAACQ,CAAD,EAAIC,CAAJ,CALV;IAMV,KAAKN,eAAe,CAACK,CAAD,EAAIC,CAAJ;EANV,CAAd,CAN2C,CAgB3C;;EAEA,OAAOK,KAAK,CAACD,KAAK,CAAC,CAAD,CAAN,CAAZ;AAEH;;GApBuBN,c;UAEED,W,EAKbJ,e,EACAD,iB,EACIF,iB,EAA4BC,e,EAChCD,iB,EACAC,e,EACAG,e"},"metadata":{},"sourceType":"module"}