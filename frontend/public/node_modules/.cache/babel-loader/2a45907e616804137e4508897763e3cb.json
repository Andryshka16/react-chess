{"ast":null,"code":"import checkForChecks from \"../King activity/Checks\";\nimport { castlingMoved, turn } from \"../Move piece/Move piece\";\nimport { gameField } from \"../../Gamefield\";\nexport default function canCastle(x, y) {\n  let castlingMoves = [];\n\n  for (let rook of [x - 4, x + 3]) {\n    if (x !== 4 || gameField[y][rook] !== turn + \"R\" || castlingMoved.includes(gameField[y][x]) || castlingMoved.includes(rook + turn + \"R\") || checkForChecks([x, y])) continue;\n    let k = rook > 4 ? 1 : -1;\n    if (checkForChecks([4 + k, y]) || gameField[y][4 + k] !== \"0\" || checkForChecks([4 + 2 * k, y]) || gameField[y][4 + 2 * k] !== \"0\") continue;\n    castlingMoves.push([rook, y]);\n  }\n\n  return castlingMoves;\n}","map":{"version":3,"names":["checkForChecks","castlingMoved","turn","gameField","canCastle","x","y","castlingMoves","rook","includes","k","push"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Allow castling.js"],"sourcesContent":["import checkForChecks from \"../King activity/Checks\";\r\nimport {castlingMoved, turn} from \"../Move piece/Move piece\";\r\nimport {gameField} from \"../../Gamefield\";\r\n\r\nexport default function canCastle(x, y) {\r\n\r\n    let castlingMoves = []\r\n\r\n    for (let rook of [x-4, x+3]) {\r\n\r\n        if (x !== 4\r\n            || gameField[y][rook] !== turn + \"R\"\r\n            || castlingMoved.includes(gameField[y][x])\r\n            || castlingMoved.includes(rook + turn + \"R\")\r\n            || checkForChecks([x, y])\r\n        ) continue\r\n\r\n        let k = rook > 4? 1: -1\r\n\r\n        if (\r\n            (checkForChecks([4 + k, y]) || gameField[y][4 + k] !== \"0\") ||\r\n            (checkForChecks([4 + 2*k, y]) || gameField[y][4 + 2*k] !== \"0\")\r\n        ) continue\r\n\r\n        castlingMoves.push([rook, y])\r\n    }\r\n\r\n    return castlingMoves\r\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,yBAA3B;AACA,SAAQC,aAAR,EAAuBC,IAAvB,QAAkC,0BAAlC;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;EAEpC,IAAIC,aAAa,GAAG,EAApB;;EAEA,KAAK,IAAIC,IAAT,IAAiB,CAACH,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,CAAjB,EAA6B;IAEzB,IAAIA,CAAC,KAAK,CAAN,IACGF,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAb,MAAuBN,IAAI,GAAG,GADjC,IAEGD,aAAa,CAACQ,QAAd,CAAuBN,SAAS,CAACG,CAAD,CAAT,CAAaD,CAAb,CAAvB,CAFH,IAGGJ,aAAa,CAACQ,QAAd,CAAuBD,IAAI,GAAGN,IAAP,GAAc,GAArC,CAHH,IAIGF,cAAc,CAAC,CAACK,CAAD,EAAIC,CAAJ,CAAD,CAJrB,EAKE;IAEF,IAAII,CAAC,GAAGF,IAAI,GAAG,CAAP,GAAU,CAAV,GAAa,CAAC,CAAtB;IAEA,IACKR,cAAc,CAAC,CAAC,IAAIU,CAAL,EAAQJ,CAAR,CAAD,CAAd,IAA8BH,SAAS,CAACG,CAAD,CAAT,CAAa,IAAII,CAAjB,MAAwB,GAAvD,IACCV,cAAc,CAAC,CAAC,IAAI,IAAEU,CAAP,EAAUJ,CAAV,CAAD,CAAd,IAAgCH,SAAS,CAACG,CAAD,CAAT,CAAa,IAAI,IAAEI,CAAnB,MAA0B,GAF/D,EAGE;IAEFH,aAAa,CAACI,IAAd,CAAmB,CAACH,IAAD,EAAOF,CAAP,CAAnB;EACH;;EAED,OAAOC,aAAP;AACH"},"metadata":{},"sourceType":"module"}