{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useCheckForChecks from \"../King activity/Checks\";\nimport { useSelector } from \"react-redux\";\nexport default function useCanCastle(x, y) {\n  _s();\n\n  const {\n    gameField,\n    turn,\n    castlingMoved\n  } = useSelector(store => store.chess);\n  const checkForChecks = useCheckForChecks();\n  if (gameField[y][x][1] !== \"K\") return [];\n  let castlingMoves = [];\n\n  for (let rook of [x - 4, x + 3]) {\n    if (x !== 4 || gameField[y][rook] !== turn + \"R\" || castlingMoved.includes(gameField[y][x]) || castlingMoved.includes(rook + turn + \"R\") || checkForChecks([x, y])) continue;\n    let k = rook > 4 ? 1 : -1;\n    if (checkForChecks([4 + k, y]) || gameField[y][4 + k] !== \"0\" || checkForChecks([4 + 2 * k, y]) || gameField[y][4 + 2 * k] !== \"0\") continue;\n    castlingMoves.push([rook, y]);\n  }\n\n  return castlingMoves;\n}\n\n_s(useCanCastle, \"xiwE71RS6vmdvCZ+aol5EfPgmV0=\", false, function () {\n  return [useSelector, useCheckForChecks];\n});","map":{"version":3,"names":["useCheckForChecks","useSelector","useCanCastle","x","y","gameField","turn","castlingMoved","store","chess","checkForChecks","castlingMoves","rook","includes","k","push"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Allow castling.js"],"sourcesContent":["import useCheckForChecks from \"../King activity/Checks\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport default function useCanCastle(x, y) {\r\n\r\n    const { gameField, turn, castlingMoved } = useSelector(store => store.chess)\r\n    const checkForChecks = useCheckForChecks()\r\n    \r\n    if (gameField[y][x][1] !== \"K\")\r\n        return []\r\n    \r\n    let castlingMoves = []\r\n    for (let rook of [x-4, x+3]) {\r\n\r\n        if (x !== 4\r\n            || gameField[y][rook] !== turn + \"R\"\r\n            || castlingMoved.includes(gameField[y][x])\r\n            || castlingMoved.includes(rook + turn + \"R\")\r\n            || checkForChecks([x, y])\r\n        ) continue\r\n\r\n        let k = rook > 4? 1: -1\r\n\r\n        if (\r\n            (checkForChecks([4 + k, y]) || gameField[y][4 + k] !== \"0\") ||\r\n            (checkForChecks([4 + 2 * k, y]) || gameField[y][4 + 2 * k] !== \"0\")\r\n        ) continue\r\n\r\n        castlingMoves.push([rook, y])\r\n    }\r\n\r\n    return castlingMoves\r\n}"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;EAAA;;EAEvC,MAAM;IAAEC,SAAF;IAAaC,IAAb;IAAmBC;EAAnB,IAAqCN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAtD;EACA,MAAMC,cAAc,GAAGV,iBAAiB,EAAxC;EAEA,IAAIK,SAAS,CAACD,CAAD,CAAT,CAAaD,CAAb,EAAgB,CAAhB,MAAuB,GAA3B,EACI,OAAO,EAAP;EAEJ,IAAIQ,aAAa,GAAG,EAApB;;EACA,KAAK,IAAIC,IAAT,IAAiB,CAACT,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,CAAjB,EAA6B;IAEzB,IAAIA,CAAC,KAAK,CAAN,IACGE,SAAS,CAACD,CAAD,CAAT,CAAaQ,IAAb,MAAuBN,IAAI,GAAG,GADjC,IAEGC,aAAa,CAACM,QAAd,CAAuBR,SAAS,CAACD,CAAD,CAAT,CAAaD,CAAb,CAAvB,CAFH,IAGGI,aAAa,CAACM,QAAd,CAAuBD,IAAI,GAAGN,IAAP,GAAc,GAArC,CAHH,IAIGI,cAAc,CAAC,CAACP,CAAD,EAAIC,CAAJ,CAAD,CAJrB,EAKE;IAEF,IAAIU,CAAC,GAAGF,IAAI,GAAG,CAAP,GAAU,CAAV,GAAa,CAAC,CAAtB;IAEA,IACKF,cAAc,CAAC,CAAC,IAAII,CAAL,EAAQV,CAAR,CAAD,CAAd,IAA8BC,SAAS,CAACD,CAAD,CAAT,CAAa,IAAIU,CAAjB,MAAwB,GAAvD,IACCJ,cAAc,CAAC,CAAC,IAAI,IAAII,CAAT,EAAYV,CAAZ,CAAD,CAAd,IAAkCC,SAAS,CAACD,CAAD,CAAT,CAAa,IAAI,IAAIU,CAArB,MAA4B,GAFnE,EAGE;IAEFH,aAAa,CAACI,IAAd,CAAmB,CAACH,IAAD,EAAOR,CAAP,CAAnB;EACH;;EAED,OAAOO,aAAP;AACH;;GA7BuBT,Y;UAEuBD,W,EACpBD,iB"},"metadata":{},"sourceType":"module"}