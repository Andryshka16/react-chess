{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import {clearField} from \"../../../Indicators/ShowNextMoves\";\n// import togglePointerEvents from \"../Pawn promotion/togglePointerEvents\";\n// import doCastling from \"./Related with king/Castle king\";\n// import removePiece from \"./Remove piece\";\n// import maybeCastlingPiecesMoved from \"./Related with king/Mby castling pieces moved\";\n// import updateState from \"./Update state\";\n// import {recentPieceCrd} from \"../../piece\";\n// import {gameField} from \"../../Gamefield\";\n// import {setPromoted} from \"../Pawn promotion/Promotion\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearNextMoves, setCheck, setTurn, movePiece, setSelected } from '../../../../../features/chess/chessSlice';\nexport let turn = \"w\";\nexport const turns = {\n  \"w\": \"b\",\n  \"b\": \"w\"\n};\nexport let enPassing;\nexport let castlingMoved = [];\nexport let clearCastlingMoved = () => castlingMoved = [];\nexport default function useMovePiece() {\n  _s();\n\n  const dispatch = useDispatch();\n  return (x2, y2) => {\n    dispatch(movePiece([x2, y2])); // if (name === \"K\" && Math.abs(x2 - x1) > 1){\n    //     updateState(doCastling, [x2, y2], true)\n    //     return\n    // }\n    // if (gameField[y2][x2] !== \"0\") {\n    //     removePiece(x2, y2)\n    // }\n    // else if (name === \"P\" && x1 !== x2 && gameField[y2][x2] === \"0\"){\n    //     removePiece(x2, y1)\n    // }\n    // enPassing = name === \"P\" &&\n    //     Math.abs(y2 - y1) === 2 ?\n    //         {x: x2, y: y2} : false\n    // if (name === \"P\"  && (y2 === 7 || y2 === 0)){\n    //     setPromoted([x2, y2])\n    //     togglePointerEvents(\"none\")\n    // }\n    // maybeCastlingPiecesMoved(color, name, x1)\n    // updateState(setPiece,{\n    //         x: x2,\n    //         y: y2,\n    //         from: {x: x1, y: y1}\n    //     })\n  };\n}\n\n_s(useMovePiece, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","useSelector","clearNextMoves","setCheck","setTurn","movePiece","setSelected","turn","turns","enPassing","castlingMoved","clearCastlingMoved","useMovePiece","dispatch","x2","y2"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Move piece/Move piece.js"],"sourcesContent":["// import {clearField} from \"../../../Indicators/ShowNextMoves\";\r\n// import togglePointerEvents from \"../Pawn promotion/togglePointerEvents\";\r\n// import doCastling from \"./Related with king/Castle king\";\r\n// import removePiece from \"./Remove piece\";\r\n// import maybeCastlingPiecesMoved from \"./Related with king/Mby castling pieces moved\";\r\n// import updateState from \"./Update state\";\r\n// import {recentPieceCrd} from \"../../piece\";\r\n// import {gameField} from \"../../Gamefield\";\r\n// import {setPromoted} from \"../Pawn promotion/Promotion\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearNextMoves,setCheck, setTurn, movePiece, setSelected } from '../../../../../features/chess/chessSlice';\r\n\r\nexport let turn = \"w\"\r\n\r\nexport const turns = {\"w\": \"b\", \"b\": \"w\"}\r\n\r\nexport let enPassing\r\nexport let castlingMoved = []\r\nexport let clearCastlingMoved = () => castlingMoved = []\r\n\r\nexport default function useMovePiece(){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (x2, y2) => {\r\n        dispatch(movePiece([x2, y2]))\r\n        // if (name === \"K\" && Math.abs(x2 - x1) > 1){\r\n        //     updateState(doCastling, [x2, y2], true)\r\n        //     return\r\n        // }\r\n\r\n        // if (gameField[y2][x2] !== \"0\") {\r\n        //     removePiece(x2, y2)\r\n        // }\r\n\r\n        // else if (name === \"P\" && x1 !== x2 && gameField[y2][x2] === \"0\"){\r\n        //     removePiece(x2, y1)\r\n        // }\r\n\r\n        // enPassing = name === \"P\" &&\r\n        //     Math.abs(y2 - y1) === 2 ?\r\n        //         {x: x2, y: y2} : false\r\n\r\n        // if (name === \"P\"  && (y2 === 7 || y2 === 0)){\r\n        //     setPromoted([x2, y2])\r\n        //     togglePointerEvents(\"none\")\r\n        // }\r\n\r\n        // maybeCastlingPiecesMoved(color, name, x1)\r\n\r\n        // updateState(setPiece,{\r\n        //         x: x2,\r\n        //         y: y2,\r\n        //         from: {x: x1, y: y1}\r\n            //     })\r\n    }\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAwBC,QAAxB,EAAkCC,OAAlC,EAA2CC,SAA3C,EAAsDC,WAAtD,QAAyE,0CAAzE;AAEA,OAAO,IAAIC,IAAI,GAAG,GAAX;AAEP,OAAO,MAAMC,KAAK,GAAG;EAAC,KAAK,GAAN;EAAW,KAAK;AAAhB,CAAd;AAEP,OAAO,IAAIC,SAAJ;AACP,OAAO,IAAIC,aAAa,GAAG,EAApB;AACP,OAAO,IAAIC,kBAAkB,GAAG,MAAMD,aAAa,GAAG,EAA/C;AAEP,eAAe,SAASE,YAAT,GAAuB;EAAA;;EAElC,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EAEA,OAAO,CAACc,EAAD,EAAKC,EAAL,KAAY;IACfF,QAAQ,CAACR,SAAS,CAAC,CAACS,EAAD,EAAKC,EAAL,CAAD,CAAV,CAAR,CADe,CAEf;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACI;EACP,CA/BD;AAgCH;;GApCuBH,Y;UAEHZ,W"},"metadata":{},"sourceType":"module"}