{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nexport default function useGetKnightMoves(x, y) {\n  _s();\n\n  const dispatch = useDispatch();\n  nextMoves.push(...[[x + 2, y - 1], [x + 2, y + 1], [x - 2, y + 1], [x - 2, y - 1], [x + 1, y + 2], [x - 1, y + 2], [x + 1, y - 2], [x - 1, y - 2]]);\n}\n\n_s(useGetKnightMoves, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","useGetKnightMoves","x","y","dispatch","nextMoves","push"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Piece moves/Knight.js"],"sourcesContent":["import { useDispatch } from 'react-redux'\r\n\r\n\r\nexport default function useGetKnightMoves(x, y) {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    nextMoves.push(...[\r\n                [x + 2, y - 1], [x + 2, y + 1],\r\n                [x - 2, y + 1], [x - 2, y - 1],\r\n                [x + 1, y + 2], [x - 1, y + 2],\r\n                [x + 1, y - 2], [x - 1, y - 2]\r\n            ])\r\n}"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAGA,eAAe,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;EAAA;;EAE5C,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EAEAK,SAAS,CAACC,IAAV,CAAe,GAAG,CACN,CAACJ,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CADM,EACU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CADV,EAEN,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAFM,EAEU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAFV,EAGN,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAHM,EAGU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAHV,EAIN,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAJM,EAIU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAJV,CAAlB;AAMH;;GAVuBF,iB;UAEHD,W"},"metadata":{},"sourceType":"module"}