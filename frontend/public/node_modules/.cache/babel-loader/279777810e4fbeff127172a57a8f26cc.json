{"ast":null,"code":"import getBishopMoves from \"./Piece moves/Bishop\";\nimport getRookMoves from \"./Piece moves/Rook\";\nimport getKnightMoves from \"./Piece moves/Knight\";\nimport getKingMoves from \"./Piece moves/King\";\nimport getPawnMoves from \"./Piece moves/Pawn\";\nimport filterNextMoves from \"./Filtration\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearNextMoves } from '../../../../../features/chess/chessSlice';\nexport function useGetNextMove(_ref, returnArray) {\n  let [x, y] = _ref;\n  // const { gameField, nextMoves } = useSelector(store => store.chess)    \n  // const dispatch = useDispatch()\n  // dispatch(clearNextMoves())\n  // let piece = gameField[y][x]\n  // const steps = {\n  //     \"K\": () => getKingMoves(x, y),\n  //     \"N\": () => getKnightMoves(x, y),\n  //     \"Q\": () => {\n  //         getBishopMoves(x, y)\n  //         getRookMoves(x, y)\n  //     },\n  //     \"B\": () => getBishopMoves(x, y),\n  //     \"R\": () => getRookMoves(x, y),\n  //     \"P\": () => getPawnMoves(x, y),\n  // }\n  // steps[piece[1]]()\n  // nextMoves = filterNextMoves(x, y)\n  return () => {\n    console.log(true);\n  };\n}","map":{"version":3,"names":["getBishopMoves","getRookMoves","getKnightMoves","getKingMoves","getPawnMoves","filterNextMoves","useDispatch","useSelector","clearNextMoves","useGetNextMove","returnArray","x","y","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/NextMoves.js"],"sourcesContent":["import getBishopMoves from \"./Piece moves/Bishop\";\r\nimport getRookMoves from \"./Piece moves/Rook\";\r\nimport getKnightMoves from \"./Piece moves/Knight\";\r\nimport getKingMoves from \"./Piece moves/King\";\r\nimport getPawnMoves from \"./Piece moves/Pawn\";\r\nimport filterNextMoves from \"./Filtration\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearNextMoves } from '../../../../../features/chess/chessSlice';\r\n\r\n\r\n\r\nexport function useGetNextMove([x,y], returnArray){\r\n\r\n    // const { gameField, nextMoves } = useSelector(store => store.chess)    \r\n    // const dispatch = useDispatch()\r\n\r\n    // dispatch(clearNextMoves())\r\n    // let piece = gameField[y][x]\r\n\r\n    // const steps = {\r\n    //     \"K\": () => getKingMoves(x, y),\r\n    //     \"N\": () => getKnightMoves(x, y),\r\n    //     \"Q\": () => {\r\n    //         getBishopMoves(x, y)\r\n    //         getRookMoves(x, y)\r\n    //     },\r\n    //     \"B\": () => getBishopMoves(x, y),\r\n    //     \"R\": () => getRookMoves(x, y),\r\n    //     \"P\": () => getPawnMoves(x, y),\r\n    // }\r\n\r\n    // steps[piece[1]]()\r\n\r\n    // nextMoves = filterNextMoves(x, y)\r\n\r\n    return () => {\r\n        console.log(true)\r\n    }\r\n    \r\n\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,0CAA/B;AAIA,OAAO,SAASC,cAAT,OAA+BC,WAA/B,EAA2C;EAAA,IAAnB,CAACC,CAAD,EAAGC,CAAH,CAAmB;EAE9C;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EAEA,OAAO,MAAM;IACTC,OAAO,CAACC,GAAR,CAAY,IAAZ;EACH,CAFD;AAKH"},"metadata":{},"sourceType":"module"}