{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { turns } from \"../Move piece/Move piece\";\nlet checkCRD = [];\nexport default function useCheckForChecks() {\n  _s();\n\n  const {\n    gameField,\n    turn\n  } = useSelector(store => store.chess);\n  let check = 0;\n  const color = turns[turn];\n\n  function checkCell(_ref, piece, i) {\n    let [x, y] = _ref;\n    let name = gameField[y][x];\n\n    if (name !== \"0\" && name !== turns[color] + \"K\") {\n      if (name === color + \"K\" && Math.abs(i) === 1) {\n        checkCRD = [x, y];\n        check += 1;\n      } else if (name === color + \"Q\" || name === color + piece) {\n        checkCRD = [x, y];\n        check += 1;\n      } else if (piece === \"B\" && name === color + \"P\" && (color === \"w\" ? 1 : -1) === i) {\n        checkCRD = [x, y];\n        check += 1;\n      }\n\n      return true;\n    }\n  }\n\n  return [a, b]; // Rook check\n\n  for (let i = 1; a + i < 8; i++) {\n    if (checkCell([a + i, b], \"R\", i)) {\n      break;\n    }\n  }\n\n  for (let i = 1; a - i >= 0; i++) {\n    if (checkCell([a - i, b], \"R\", i)) {\n      break;\n    }\n  }\n\n  for (let i = 1; b + i < 8; i++) {\n    if (checkCell([a, b + i], \"R\", i)) {\n      break;\n    }\n  }\n\n  for (let i = 1; b - i >= 0; i++) {\n    if (checkCell([a, b - i], \"R\", i)) {\n      break;\n    }\n  } // Bishop check\n\n\n  for (let i = 1; a + i < 8 && b + i < 8; i++) {\n    if (checkCell([a + i, b + i], \"B\", i)) {\n      break;\n    }\n  }\n\n  for (let i = 1; a - i >= 0 && b - i >= 0; i++) {\n    if (checkCell([a - i, b - i], \"B\", -i)) {\n      break;\n    }\n  }\n\n  for (let i = 1; b + i < 8 && a - i >= 0; i++) {\n    if (checkCell([a - i, b + i], \"B\", i)) {\n      break;\n    }\n  }\n\n  for (let i = 1; b - i >= 0 && a + i < 8; i++) {\n    if (checkCell([a + i, b - i], \"B\", -i)) {\n      break;\n    }\n  }\n\n  let knights = [[a - 2, b - 1], [a - 1, b + 2], [a - 2, b + 1], [a + 1, b + 2], [a + 2, b - 1], [a - 1, b - 2], [a + 2, b + 1], [a + 1, b - 2]];\n  knights = knights.filter(_ref2 => {\n    let [x, y] = _ref2;\n    return x >= 0 && x < 8 && y >= 0 && y < 8 && gameField[y][x][0] !== turn;\n  });\n  knights.forEach(_ref3 => {\n    let [x, y] = _ref3;\n\n    if (gameField[y][x][1] === \"N\") {\n      checkCRD = [x, y];\n      check += 1;\n    }\n  });\n  return check;\n}\n\n_s(useCheckForChecks, \"PyswnraCOO868hYsuhle+CeOSW0=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useSelector","turns","checkCRD","useCheckForChecks","gameField","turn","store","chess","check","color","checkCell","piece","i","x","y","name","Math","abs","a","b","knights","filter","forEach"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/King activity/Checks.js"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport {turns} from \"../Move piece/Move piece\";\r\n\r\nlet checkCRD = []\r\n\r\nexport default function useCheckForChecks(){\r\n\r\n    const { gameField, turn } = useSelector(store => store.chess)\r\n\r\n    let check = 0\r\n    const color = turns[turn]\r\n\r\n    function checkCell([x,y], piece, i) {\r\n\r\n        let name = gameField[y][x]\r\n\r\n        if (name !== \"0\" && name !== turns[color] + \"K\") {\r\n\r\n            if (name === color + \"K\" && Math.abs(i) === 1) {\r\n                checkCRD = [x, y]\r\n                check += 1\r\n            }\r\n\r\n            else if (name === color + \"Q\" || name === color + piece) {\r\n                checkCRD = [x, y]\r\n                check += 1\r\n            }\r\n\r\n            else if (piece === \"B\" && name === color + \"P\"\r\n                && (color === \"w\"? 1 : -1) === i) {\r\n                checkCRD = [x, y]\r\n                check += 1\r\n            }\r\n\r\n            return true\r\n        }\r\n    }\r\n\r\n    return ([a,b])\r\n\r\n    // Rook check\r\n\r\n    for (let i = 1; a + i < 8; i++){\r\n        if(checkCell([a + i, b],\"R\", i)){\r\n            break\r\n        }\r\n    }\r\n    for (let i = 1; a - i >=  0; i++) {\r\n        if(checkCell([a - i, b],\"R\", i)){\r\n            break\r\n        }\r\n    }\r\n    for (let i = 1; b + i < 8; i++){\r\n        if(checkCell([a, b + i],\"R\", i)){\r\n            break\r\n        }\r\n    }\r\n    for (let i = 1; b - i >= 0; i++){\r\n        if(checkCell([a, b - i],\"R\", i)){\r\n            break\r\n        }\r\n    }\r\n\r\n    // Bishop check\r\n\r\n    for (let i = 1; a + i < 8 && b + i < 8; i++){\r\n        if(checkCell([a + i, b + i],\"B\", i)){\r\n            break\r\n        }\r\n    }\r\n    for (let i = 1; a - i >= 0 && b - i >= 0; i++){\r\n        if(checkCell([a - i, b - i],\"B\", -i)){\r\n            break\r\n        }\r\n    }\r\n    for (let i = 1; b + i < 8 && a - i >= 0; i++){\r\n        if(checkCell([a - i, b + i],\"B\", i)){\r\n            break\r\n        }\r\n    }\r\n    for (let i = 1; b - i >= 0 && a + i < 8; i++){\r\n        if(checkCell([a + i, b - i],\"B\", -i)){\r\n            break\r\n        }\r\n    }\r\n\r\n    let knights = [\r\n      [ a - 2, b - 1 ],  [ a - 1, b + 2 ],\r\n      [ a - 2, b + 1 ],  [ a + 1, b + 2 ],\r\n      [ a + 2, b - 1 ],  [ a - 1, b - 2 ],\r\n      [ a + 2, b + 1 ],  [ a + 1, b - 2 ]\r\n    ]\r\n\r\n    knights = knights.filter(([x,y])=>\r\n        x >= 0 && x < 8 &&\r\n        y >= 0 && y < 8 &&\r\n        gameField[y][x][0] !== turn\r\n    )\r\n\r\n    knights.forEach(([x,y])=>{\r\n        if (gameField[y][x][1] === \"N\"){\r\n            checkCRD = [x,y]\r\n            check += 1\r\n        }\r\n    })\r\n\r\n    return check\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}