{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport checkForChecks from \"../King activity/Checks\";\nimport { useSelector } from \"react-redux\";\nexport default function useCanCastle(x, y) {\n  _s();\n\n  const {\n    gameField,\n    turn,\n    castlingMoved\n  } = useSelector(store => store.chess);\n  if (gameField[y][x][1] !== \"K\") return [];\n  let castlingMoves = [];\n\n  for (let rook of [x - 4, x + 3]) {\n    if (x !== 4 || gameField[y][rook] !== turn + \"R\" || castlingMoved.includes(gameField[y][x]) || castlingMoved.includes(rook + turn + \"R\") || checkForChecks(gameField, turn, [x, y])) continue;\n    let k = rook > 4 ? 1 : -1;\n    if (checkForChecks(gameField, turn, [4 + k, y]) || gameField[y][4 + k] !== \"0\" || checkForChecks(gameField, turn, [4 + 2 * k, y]) || gameField[y][4 + 2 * k] !== \"0\") continue;\n    castlingMoves.push([rook, y]);\n  }\n\n  return castlingMoves;\n}\n\n_s(useCanCastle, \"gTG0GrVt39o3gAKfBY6HtYSgihY=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["checkForChecks","useSelector","useCanCastle","x","y","gameField","turn","castlingMoved","store","chess","castlingMoves","rook","includes","k","push"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Allow castling.js"],"sourcesContent":["import checkForChecks from \"../King activity/Checks\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport default function useCanCastle(x, y) {\r\n\r\n    const { gameField, turn, castlingMoved } = useSelector(store => store.chess)\r\n    \r\n    if (gameField[y][x][1] !== \"K\")\r\n        return []\r\n    \r\n    let castlingMoves = []\r\n    for (let rook of [x-4, x+3]) {\r\n\r\n        if (x !== 4\r\n            || gameField[y][rook] !== turn + \"R\"\r\n            || castlingMoved.includes(gameField[y][x])\r\n            || castlingMoved.includes(rook + turn + \"R\")\r\n            || checkForChecks(gameField, turn, [x, y])\r\n        ) continue\r\n\r\n        let k = rook > 4? 1: -1\r\n\r\n        if (\r\n            (checkForChecks(gameField, turn, [4 + k, y]) || gameField[y][4 + k] !== \"0\") ||\r\n            (checkForChecks(gameField, turn, [4 + 2 * k, y]) || gameField[y][4 + 2 * k] !== \"0\")\r\n        ) continue\r\n\r\n        castlingMoves.push([rook, y])\r\n    }\r\n\r\n    return castlingMoves\r\n}"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,yBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;EAAA;;EAEvC,MAAM;IAAEC,SAAF;IAAaC,IAAb;IAAmBC;EAAnB,IAAqCN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAtD;EAEA,IAAIJ,SAAS,CAACD,CAAD,CAAT,CAAaD,CAAb,EAAgB,CAAhB,MAAuB,GAA3B,EACI,OAAO,EAAP;EAEJ,IAAIO,aAAa,GAAG,EAApB;;EACA,KAAK,IAAIC,IAAT,IAAiB,CAACR,CAAC,GAAC,CAAH,EAAMA,CAAC,GAAC,CAAR,CAAjB,EAA6B;IAEzB,IAAIA,CAAC,KAAK,CAAN,IACGE,SAAS,CAACD,CAAD,CAAT,CAAaO,IAAb,MAAuBL,IAAI,GAAG,GADjC,IAEGC,aAAa,CAACK,QAAd,CAAuBP,SAAS,CAACD,CAAD,CAAT,CAAaD,CAAb,CAAvB,CAFH,IAGGI,aAAa,CAACK,QAAd,CAAuBD,IAAI,GAAGL,IAAP,GAAc,GAArC,CAHH,IAIGN,cAAc,CAACK,SAAD,EAAYC,IAAZ,EAAkB,CAACH,CAAD,EAAIC,CAAJ,CAAlB,CAJrB,EAKE;IAEF,IAAIS,CAAC,GAAGF,IAAI,GAAG,CAAP,GAAU,CAAV,GAAa,CAAC,CAAtB;IAEA,IACKX,cAAc,CAACK,SAAD,EAAYC,IAAZ,EAAkB,CAAC,IAAIO,CAAL,EAAQT,CAAR,CAAlB,CAAd,IAA+CC,SAAS,CAACD,CAAD,CAAT,CAAa,IAAIS,CAAjB,MAAwB,GAAxE,IACCb,cAAc,CAACK,SAAD,EAAYC,IAAZ,EAAkB,CAAC,IAAI,IAAIO,CAAT,EAAYT,CAAZ,CAAlB,CAAd,IAAmDC,SAAS,CAACD,CAAD,CAAT,CAAa,IAAI,IAAIS,CAArB,MAA4B,GAFpF,EAGE;IAEFH,aAAa,CAACI,IAAd,CAAmB,CAACH,IAAD,EAAOP,CAAP,CAAnB;EACH;;EAED,OAAOM,aAAP;AACH;;GA5BuBR,Y;UAEuBD,W"},"metadata":{},"sourceType":"module"}