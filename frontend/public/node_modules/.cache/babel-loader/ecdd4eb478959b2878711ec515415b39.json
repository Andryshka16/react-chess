{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport checkForChecks from \"../King activity/Checks\";\nimport isPiecePinned from \"./Check for pin\";\nimport pinFilter from \"./Pin filter\";\nimport canCastle from \"./Allow castling\";\nimport { useSelector } from 'react-redux';\nimport useKingCoordinates from '../King activity/Find king';\nexport default function useFilterNextMoves(x, y, nextMoves) {\n  _s();\n\n  const {\n    gameField,\n    coverMoves,\n    turn\n  } = useSelector(store => store.chess);\n  let [color, piece] = gameField[y][x];\n  const king = useKingCoordinates(turn + \"K\");\n  return () => {\n    let newMoves = nextMoves.filter(_ref => {\n      let [x, y] = _ref;\n      return x >= 0 && x < 8 && y >= 0 && y < 8 && gameField[y][x][0] !== color;\n    });\n\n    if (piece === \"K\") {\n      newMoves = newMoves.filter(move => !checkForChecks(move));\n      newMoves.push(...canCastle(x, y));\n    } else if (piece === \"P\") {\n      newMoves = newMoves.filter(_ref2 => {\n        let [a, b] = _ref2;\n        return !(a === x && gameField[b][a] !== \"0\");\n      });\n    }\n\n    if (coverMoves.length && piece !== \"K\") {\n      let saves = coverMoves.map(elm => elm.toString());\n      newMoves = newMoves.filter(move => saves.includes(move.toString()));\n    }\n\n    if (isPiecePinned([x, y])) {\n      console.log(color + piece, \"is Pinned\");\n      newMoves = newMoves.filter(move => pinFilter(move, [x, y], king));\n    }\n  };\n}\n\n_s(useFilterNextMoves, \"QbcaHYZFd1ldSlvBALIqRmy139s=\", false, function () {\n  return [useSelector, useKingCoordinates];\n});","map":{"version":3,"names":["checkForChecks","isPiecePinned","pinFilter","canCastle","useSelector","useKingCoordinates","useFilterNextMoves","x","y","nextMoves","gameField","coverMoves","turn","store","chess","color","piece","king","newMoves","filter","move","push","a","b","length","saves","map","elm","toString","includes","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Filtration.js"],"sourcesContent":["import checkForChecks from \"../King activity/Checks\";\r\nimport isPiecePinned from \"./Check for pin\";\r\nimport pinFilter from \"./Pin filter\";\r\nimport canCastle from \"./Allow castling\";\r\nimport { useSelector } from 'react-redux';\r\nimport useKingCoordinates from '../King activity/Find king';\r\n\r\nexport default function useFilterNextMoves(x, y, nextMoves){\r\n\r\n    const { gameField, coverMoves, turn } = useSelector(store => store.chess)\r\n    let [color, piece] = gameField[y][x]\r\n    const king = useKingCoordinates(turn + \"K\")\r\n\r\n\r\n\r\n    return () => {\r\n            let newMoves = nextMoves.filter(([x,y])=>\r\n        x >= 0 && x < 8\r\n        && y >= 0 && y < 8\r\n        && gameField[y][x][0] !== color\r\n    )\r\n\r\n    if (piece === \"K\"){\r\n        newMoves = newMoves.filter(move => !checkForChecks(move))\r\n        newMoves.push(...canCastle(x, y))\r\n    }\r\n\r\n    else if (piece === \"P\"){\r\n        newMoves = newMoves.filter(([a, b]) => ! (a === x && gameField[b][a] !== \"0\"))\r\n    }\r\n\r\n    if (coverMoves.length && piece !== \"K\"){\r\n        let saves = coverMoves.map(elm => elm.toString())\r\n        newMoves = newMoves.filter(move => saves.includes(move.toString()))\r\n    }\r\n\r\n    if (isPiecePinned([x, y])){\r\n        console.log(color + piece, \"is Pinned\")\r\n        newMoves = newMoves.filter(move => pinFilter(move, [x,y], king))\r\n    }\r\n    }\r\n\r\n}"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,yBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AAEA,eAAe,SAASC,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA4C;EAAA;;EAEvD,MAAM;IAAEC,SAAF;IAAaC,UAAb;IAAyBC;EAAzB,IAAkCR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAnD;EACA,IAAI,CAACC,KAAD,EAAQC,KAAR,IAAiBN,SAAS,CAACF,CAAD,CAAT,CAAaD,CAAb,CAArB;EACA,MAAMU,IAAI,GAAGZ,kBAAkB,CAACO,IAAI,GAAG,GAAR,CAA/B;EAIA,OAAO,MAAM;IACL,IAAIM,QAAQ,GAAGT,SAAS,CAACU,MAAV,CAAiB;MAAA,IAAC,CAACZ,CAAD,EAAGC,CAAH,CAAD;MAAA,OACpCD,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAG,CAAd,IACGC,CAAC,IAAI,CADR,IACaA,CAAC,GAAG,CADjB,IAEGE,SAAS,CAACF,CAAD,CAAT,CAAaD,CAAb,EAAgB,CAAhB,MAAuBQ,KAHU;IAAA,CAAjB,CAAf;;IAMR,IAAIC,KAAK,KAAK,GAAd,EAAkB;MACdE,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAI,CAACpB,cAAc,CAACoB,IAAD,CAAvC,CAAX;MACAF,QAAQ,CAACG,IAAT,CAAc,GAAGlB,SAAS,CAACI,CAAD,EAAIC,CAAJ,CAA1B;IACH,CAHD,MAKK,IAAIQ,KAAK,KAAK,GAAd,EAAkB;MACnBE,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgB;QAAA,IAAC,CAACG,CAAD,EAAIC,CAAJ,CAAD;QAAA,OAAY,EAAGD,CAAC,KAAKf,CAAN,IAAWG,SAAS,CAACa,CAAD,CAAT,CAAaD,CAAb,MAAoB,GAAlC,CAAZ;MAAA,CAAhB,CAAX;IACH;;IAED,IAAIX,UAAU,CAACa,MAAX,IAAqBR,KAAK,KAAK,GAAnC,EAAuC;MACnC,IAAIS,KAAK,GAAGd,UAAU,CAACe,GAAX,CAAeC,GAAG,IAAIA,GAAG,CAACC,QAAJ,EAAtB,CAAZ;MACAV,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIK,KAAK,CAACI,QAAN,CAAeT,IAAI,CAACQ,QAAL,EAAf,CAAxB,CAAX;IACH;;IAED,IAAI3B,aAAa,CAAC,CAACM,CAAD,EAAIC,CAAJ,CAAD,CAAjB,EAA0B;MACtBsB,OAAO,CAACC,GAAR,CAAYhB,KAAK,GAAGC,KAApB,EAA2B,WAA3B;MACAE,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIlB,SAAS,CAACkB,IAAD,EAAO,CAACb,CAAD,EAAGC,CAAH,CAAP,EAAcS,IAAd,CAAjC,CAAX;IACH;EACA,CAzBD;AA2BH;;GAnCuBX,kB;UAEoBF,W,EAE3BC,kB"},"metadata":{},"sourceType":"module"}