{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport kingCoordinates from './King coordinates';\nimport useCheckForDraw from './Draw';\nimport useCheckForChecks from './Checks';\nimport useCheckForMate from './Mate';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCheck } from '../../../../features/chess/chessSlice';\nexport default function useCheckSituation() {\n  _s();\n\n  const {\n    turn\n  } = useSelector(store => store.chess);\n  const dispatch = useDispatch();\n  const checkForChecks = useCheckForChecks();\n  const checkForDraw = useCheckForDraw();\n  const checkForMate = useCheckForMate();\n  const king = kingCoordinates(turn + 'K');\n  return () => {\n    const checksArray = checkForChecks(king);\n    const [check] = checksArray;\n    const amount = checksArray.length;\n\n    if (amount) {\n      // console.log('CHECK!', [amount, check])\n      dispatch(setCheck(king));\n\n      if (checkForMate(king, check, amount)) {\n        console.log('MATE, GAME OVER!');\n      }\n    } else if (checkForDraw() && !amount) {\n      console.log('DRAW, GAME OVER!');\n    } else {\n      dispatch(setCheck(null));\n    }\n  };\n}\n\n_s(useCheckSituation, \"Z71ET6dDuFhaCQD0eA5k4hfp7H8=\", false, function () {\n  return [useSelector, useDispatch, useCheckForChecks, useCheckForDraw, useCheckForMate];\n});","map":{"version":3,"names":["kingCoordinates","useCheckForDraw","useCheckForChecks","useCheckForMate","useDispatch","useSelector","setCheck","useCheckSituation","turn","store","chess","dispatch","checkForChecks","checkForDraw","checkForMate","king","checksArray","check","amount","length","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Pieces/Logic/King activity/Check situation.js"],"sourcesContent":["import kingCoordinates from './King coordinates'\r\nimport useCheckForDraw from './Draw'\r\nimport useCheckForChecks from './Checks'\r\nimport useCheckForMate from './Mate'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCheck } from '../../../../features/chess/chessSlice'\r\n\r\nexport default function useCheckSituation() {\r\n\tconst { turn } = useSelector((store) => store.chess)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst checkForChecks = useCheckForChecks()\r\n\tconst checkForDraw = useCheckForDraw()\r\n\tconst checkForMate = useCheckForMate()\r\n\tconst king = kingCoordinates(turn + 'K')\r\n\r\n\treturn () => {\r\n\t\tconst checksArray = checkForChecks(king)\r\n\t\tconst [check] = checksArray\r\n\t\tconst amount = checksArray.length\r\n\t\tif (amount) {\r\n\t\t\t// console.log('CHECK!', [amount, check])\r\n\t\t\tdispatch(setCheck(king))\r\n\r\n\t\t\tif (checkForMate(king, check, amount)) {\r\n\t\t\t\tconsole.log('MATE, GAME OVER!')\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\telse if (checkForDraw() && !amount) {\r\n\t\t\tconsole.log('DRAW, GAME OVER!')\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdispatch(setCheck(null))\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,QAA5B;AACA,OAAOC,iBAAP,MAA8B,UAA9B;AACA,OAAOC,eAAP,MAA4B,QAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,uCAAzB;AAEA,eAAe,SAASC,iBAAT,GAA6B;EAAA;;EAC3C,MAAM;IAAEC;EAAF,IAAWH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA5B;EACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EAEA,MAAMQ,cAAc,GAAGV,iBAAiB,EAAxC;EACA,MAAMW,YAAY,GAAGZ,eAAe,EAApC;EACA,MAAMa,YAAY,GAAGX,eAAe,EAApC;EACA,MAAMY,IAAI,GAAGf,eAAe,CAACQ,IAAI,GAAG,GAAR,CAA5B;EAEA,OAAO,MAAM;IACZ,MAAMQ,WAAW,GAAGJ,cAAc,CAACG,IAAD,CAAlC;IACA,MAAM,CAACE,KAAD,IAAUD,WAAhB;IACA,MAAME,MAAM,GAAGF,WAAW,CAACG,MAA3B;;IACA,IAAID,MAAJ,EAAY;MACX;MACAP,QAAQ,CAACL,QAAQ,CAACS,IAAD,CAAT,CAAR;;MAEA,IAAID,YAAY,CAACC,IAAD,EAAOE,KAAP,EAAcC,MAAd,CAAhB,EAAuC;QACtCE,OAAO,CAACC,GAAR,CAAY,kBAAZ;MACA;IACD,CAPD,MASK,IAAIR,YAAY,MAAM,CAACK,MAAvB,EAA+B;MACnCE,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACA,CAFI,MAGA;MACJV,QAAQ,CAACL,QAAQ,CAAC,IAAD,CAAT,CAAR;IACA;EAED,CApBD;AAqBA;;GA9BuBC,iB;UACNF,W,EACAD,W,EAEMF,iB,EACFD,e,EACAE,e"},"metadata":{},"sourceType":"module"}