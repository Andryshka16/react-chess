{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { nextMoves } from \"../NextMoves\";\nimport { gameField } from \"../../../Gamefield\";\nexport default function useGetRookMoves(x, y) {\n  _s();\n\n  const {\n    gameField\n  } = useSelector(store => store.chess);\n  const dispatch = useDispatch();\n  const moves = [];\n\n  for (let i = 1; x + i < 8; i++) {\n    nextMoves.push([x + i, y]);\n\n    if (gameField[y][x + i] !== \"0\") {\n      break;\n    }\n  }\n\n  for (let i = 1; x - i >= 0; i++) {\n    nextMoves.push([x - i, y]);\n\n    if (gameField[y][x - i] !== \"0\") {\n      break;\n    }\n  }\n\n  for (let i = 1; y + i < 8; i++) {\n    nextMoves.push([x, y + i]);\n\n    if (gameField[y + i][x] !== \"0\") {\n      break;\n    }\n  }\n\n  for (let i = 1; y - i >= 0; i++) {\n    nextMoves.push([x, y - i]);\n\n    if (gameField[y - i][x] !== \"0\") {\n      break;\n    }\n  }\n}\n\n_s(useGetRookMoves, \"F337XCx7OJRURNrsvaI4/t4z4iw=\", true);","map":{"version":3,"names":["nextMoves","gameField","useGetRookMoves","x","y","useSelector","store","chess","dispatch","useDispatch","moves","i","push"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Piece moves/Rook.js"],"sourcesContent":["import {nextMoves} from \"../NextMoves\";\r\nimport {gameField} from \"../../../Gamefield\";\r\n\r\nexport default function useGetRookMoves(x, y){\r\n\r\n    const { gameField } = useSelector(store => store.chess)\r\n    const dispatch = useDispatch()\r\n\r\n    const moves = []\r\n\r\n    for (let i = 1; x + i < 8; i++){\r\n        nextMoves.push([x + i, y])\r\n        if(gameField[y][x + i] !== \"0\"){break}\r\n    }\r\n    for (let i = 1; x-i>=0; i++) {\r\n        nextMoves.push([x - i, y])\r\n        if (gameField[y][x - i] !== \"0\") {break}\r\n    }\r\n    for (let i = 1; y+i<8; i++){\r\n        nextMoves.push([x, y + i])\r\n        if(gameField[y + i][x] !== \"0\"){break}\r\n    }\r\n    for (let i = 1; y-i>=0; i++){\r\n        nextMoves.push([x, y - i])\r\n        if(gameField[y - i][x] !== \"0\"){break}\r\n    }\r\n\r\n}"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,cAAxB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AAEA,eAAe,SAASC,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA8B;EAAA;;EAEzC,MAAM;IAAEH;EAAF,IAAgBI,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAjC;EACA,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;EAEA,MAAMC,KAAK,GAAG,EAAd;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBR,CAAC,GAAGQ,CAAJ,GAAQ,CAAxB,EAA2BA,CAAC,EAA5B,EAA+B;IAC3BX,SAAS,CAACY,IAAV,CAAe,CAACT,CAAC,GAAGQ,CAAL,EAAQP,CAAR,CAAf;;IACA,IAAGH,SAAS,CAACG,CAAD,CAAT,CAAaD,CAAC,GAAGQ,CAAjB,MAAwB,GAA3B,EAA+B;MAAC;IAAM;EACzC;;EACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBR,CAAC,GAACQ,CAAF,IAAK,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;IACzBX,SAAS,CAACY,IAAV,CAAe,CAACT,CAAC,GAAGQ,CAAL,EAAQP,CAAR,CAAf;;IACA,IAAIH,SAAS,CAACG,CAAD,CAAT,CAAaD,CAAC,GAAGQ,CAAjB,MAAwB,GAA5B,EAAiC;MAAC;IAAM;EAC3C;;EACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBP,CAAC,GAACO,CAAF,GAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;IACvBX,SAAS,CAACY,IAAV,CAAe,CAACT,CAAD,EAAIC,CAAC,GAAGO,CAAR,CAAf;;IACA,IAAGV,SAAS,CAACG,CAAC,GAAGO,CAAL,CAAT,CAAiBR,CAAjB,MAAwB,GAA3B,EAA+B;MAAC;IAAM;EACzC;;EACD,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBP,CAAC,GAACO,CAAF,IAAK,CAArB,EAAwBA,CAAC,EAAzB,EAA4B;IACxBX,SAAS,CAACY,IAAV,CAAe,CAACT,CAAD,EAAIC,CAAC,GAAGO,CAAR,CAAf;;IACA,IAAGV,SAAS,CAACG,CAAC,GAAGO,CAAL,CAAT,CAAiBR,CAAjB,MAAwB,GAA3B,EAA+B;MAAC;IAAM;EACzC;AAEJ;;GAxBuBD,e"},"metadata":{},"sourceType":"module"}