{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useIsPiecePinned from './Check for pin';\nimport pinFilter from './Pin filter';\nimport canCastle from './Allow castling';\nimport { useSelector } from 'react-redux';\nimport useKingCoordinates from '../King activity/Find king';\nimport useCheckForChecks from '../King activity/Checks';\nexport default function useFilterNextMoves() {\n  _s();\n\n  const {\n    nextMoves,\n    gameField,\n    coverMoves,\n    turn\n  } = useSelector(store => store.chess);\n  const isPiecePinned = useIsPiecePinned();\n  const checkForChecks = useCheckForChecks();\n  const king = useKingCoordinates(turn + 'K');\n  const castlingMoves = canCastle();\n  return (x, y) => {\n    let [color, piece] = gameField[y][x];\n    let newMoves = nextMoves.filter(_ref => {\n      let [x, y] = _ref;\n      return x >= 0 && x < 8 && y >= 0 && y < 8 && gameField[y][x][0] !== color;\n    });\n\n    if (piece === 'K') {\n      newMoves = newMoves.filter(move => !checkForChecks(move));\n      newMoves.push(...castlingMoves(x, y));\n    }\n\n    if (piece === 'P') {\n      newMoves = newMoves.filter(_ref2 => {\n        let [a, b] = _ref2;\n        return !(a === x && gameField[b][a] !== '0');\n      });\n    }\n\n    if (coverMoves.length && piece !== 'K') {\n      let saves = coverMoves.map(elm => elm.toString());\n      newMoves = newMoves.filter(move => saves.includes(move.toString()));\n    }\n\n    if (isPiecePinned([x, y])) {\n      console.log(color + piece, 'is Pinned');\n      newMoves = newMoves.filter(move => pinFilter(move, [x, y], king));\n    }\n\n    return newMoves;\n  };\n}\n\n_s(useFilterNextMoves, \"PSJMsNVVO7mTwCbYdQVZwtsfrD0=\", false, function () {\n  return [useSelector, useIsPiecePinned, useCheckForChecks, useKingCoordinates];\n});","map":{"version":3,"names":["useIsPiecePinned","pinFilter","canCastle","useSelector","useKingCoordinates","useCheckForChecks","useFilterNextMoves","nextMoves","gameField","coverMoves","turn","store","chess","isPiecePinned","checkForChecks","king","castlingMoves","x","y","color","piece","newMoves","filter","move","push","a","b","length","saves","map","elm","toString","includes","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Filtration.js"],"sourcesContent":["import useIsPiecePinned from './Check for pin'\r\nimport pinFilter from './Pin filter'\r\nimport canCastle from './Allow castling'\r\nimport { useSelector } from 'react-redux'\r\nimport useKingCoordinates from '../King activity/Find king'\r\nimport useCheckForChecks from '../King activity/Checks'\r\n\r\nexport default function useFilterNextMoves() {\r\n\tconst { nextMoves, gameField, coverMoves, turn } = useSelector((store) => store.chess)\r\n\t\r\n\tconst isPiecePinned = useIsPiecePinned()\r\n\tconst checkForChecks = useCheckForChecks()\r\n\tconst king = useKingCoordinates(turn + 'K')\r\n\tconst castlingMoves = canCastle()\r\n\r\n    return (x, y) => {\r\n        let [color, piece] = gameField[y][x]\r\n\t\tlet newMoves = nextMoves.filter(\r\n\t\t\t([x, y]) =>\r\n\t\t\t\tx >= 0 &&\r\n\t\t\t\tx < 8 &&\r\n\t\t\t\ty >= 0 &&\r\n\t\t\t\ty < 8 &&\r\n\t\t\t\tgameField[y][x][0] !== color\r\n\t\t)\r\n\r\n\t\tif (piece === 'K') {\r\n\t\t\tnewMoves = newMoves.filter((move) => !checkForChecks(move))\r\n\t\t\tnewMoves.push(...castlingMoves(x, y))\r\n\t\t}\r\n\r\n\t\tif (piece === 'P') {\r\n\t\t\tnewMoves = newMoves.filter(\r\n\t\t\t\t([a, b]) => !(a === x && gameField[b][a] !== '0')\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (coverMoves.length && piece !== 'K') {\r\n\t\t\tlet saves = coverMoves.map((elm) => elm.toString())\r\n\t\t\tnewMoves = newMoves.filter((move) =>\r\n\t\t\t\tsaves.includes(move.toString())\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (isPiecePinned([x,y])) {\r\n\t\t\tconsole.log(color + piece, 'is Pinned')\r\n\t\t\tnewMoves = newMoves.filter((move) => pinFilter(move, [x, y], king))\r\n\t\t}\r\n\r\n\t\treturn newMoves\r\n\t}\r\n}\r\n"],"mappings":";;AAAA,OAAOA,gBAAP,MAA6B,iBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAEA,eAAe,SAASC,kBAAT,GAA8B;EAAA;;EAC5C,MAAM;IAAEC,SAAF;IAAaC,SAAb;IAAwBC,UAAxB;IAAoCC;EAApC,IAA6CP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA9D;EAEA,MAAMC,aAAa,GAAGb,gBAAgB,EAAtC;EACA,MAAMc,cAAc,GAAGT,iBAAiB,EAAxC;EACA,MAAMU,IAAI,GAAGX,kBAAkB,CAACM,IAAI,GAAG,GAAR,CAA/B;EACA,MAAMM,aAAa,GAAGd,SAAS,EAA/B;EAEG,OAAO,CAACe,CAAD,EAAIC,CAAJ,KAAU;IACb,IAAI,CAACC,KAAD,EAAQC,KAAR,IAAiBZ,SAAS,CAACU,CAAD,CAAT,CAAaD,CAAb,CAArB;IACN,IAAII,QAAQ,GAAGd,SAAS,CAACe,MAAV,CACd;MAAA,IAAC,CAACL,CAAD,EAAIC,CAAJ,CAAD;MAAA,OACCD,CAAC,IAAI,CAAL,IACAA,CAAC,GAAG,CADJ,IAEAC,CAAC,IAAI,CAFL,IAGAA,CAAC,GAAG,CAHJ,IAIAV,SAAS,CAACU,CAAD,CAAT,CAAaD,CAAb,EAAgB,CAAhB,MAAuBE,KALxB;IAAA,CADc,CAAf;;IASA,IAAIC,KAAK,KAAK,GAAd,EAAmB;MAClBC,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBC,IAAD,IAAU,CAACT,cAAc,CAACS,IAAD,CAAzC,CAAX;MACAF,QAAQ,CAACG,IAAT,CAAc,GAAGR,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAA9B;IACA;;IAED,IAAIE,KAAK,KAAK,GAAd,EAAmB;MAClBC,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CACV;QAAA,IAAC,CAACG,CAAD,EAAIC,CAAJ,CAAD;QAAA,OAAY,EAAED,CAAC,KAAKR,CAAN,IAAWT,SAAS,CAACkB,CAAD,CAAT,CAAaD,CAAb,MAAoB,GAAjC,CAAZ;MAAA,CADU,CAAX;IAGA;;IAED,IAAIhB,UAAU,CAACkB,MAAX,IAAqBP,KAAK,KAAK,GAAnC,EAAwC;MACvC,IAAIQ,KAAK,GAAGnB,UAAU,CAACoB,GAAX,CAAgBC,GAAD,IAASA,GAAG,CAACC,QAAJ,EAAxB,CAAZ;MACAV,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBC,IAAD,IAC1BK,KAAK,CAACI,QAAN,CAAeT,IAAI,CAACQ,QAAL,EAAf,CADU,CAAX;IAGA;;IAED,IAAIlB,aAAa,CAAC,CAACI,CAAD,EAAGC,CAAH,CAAD,CAAjB,EAA0B;MACzBe,OAAO,CAACC,GAAR,CAAYf,KAAK,GAAGC,KAApB,EAA2B,WAA3B;MACAC,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBC,IAAD,IAAUtB,SAAS,CAACsB,IAAD,EAAO,CAACN,CAAD,EAAIC,CAAJ,CAAP,EAAeH,IAAf,CAAnC,CAAX;IACA;;IAED,OAAOM,QAAP;EACA,CAnCE;AAoCH;;GA5CuBf,kB;UAC4BH,W,EAE7BH,gB,EACCK,iB,EACVD,kB"},"metadata":{},"sourceType":"module"}