{"ast":null,"code":"import { checkForChecks } from \"../King activity/Checks\";\nimport isPiecePinned from \"./Check for pin\";\nimport pinFilter from \"./Piin filter\";\nimport canCastle from \"./Allow castling\";\nimport { coverMoves } from \"../Move piece/Related with king/Check situation\";\nexport default function useFilterNextMoves(x, y) {\n  let [color, piece] = gameField[y][x];\n  let newMoves = nextMoves.filter(_ref => {\n    let [x, y] = _ref;\n    return x >= 0 && x < 8 && y >= 0 && y < 8 && gameField[y][x][0] !== color;\n  });\n\n  if (piece === \"K\") {\n    newMoves = newMoves.filter(move => !checkForChecks(move));\n    newMoves.push(...canCastle(x, y));\n  } else if (piece === \"P\") {\n    newMoves = newMoves.filter(_ref2 => {\n      let [a, b] = _ref2;\n      return !(a === x && gameField[b][a] !== \"0\");\n    });\n  }\n\n  if (coverMoves.length && piece !== \"K\") {\n    let saves = coverMoves.map(elm => elm.toString());\n    newMoves = newMoves.filter(move => saves.includes(move.toString()));\n  }\n\n  if (isPiecePinned([x, y])) {\n    console.log(color + piece, \"is Pinned\");\n    newMoves = newMoves.filter(move => pinFilter(move, [x, y]));\n  }\n\n  return newMoves;\n}","map":{"version":3,"names":["checkForChecks","isPiecePinned","pinFilter","canCastle","coverMoves","useFilterNextMoves","x","y","color","piece","gameField","newMoves","nextMoves","filter","move","push","a","b","length","saves","map","elm","toString","includes","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Filtration.js"],"sourcesContent":["import {checkForChecks} from \"../King activity/Checks\";\r\nimport isPiecePinned from \"./Check for pin\";\r\nimport pinFilter from \"./Piin filter\";\r\nimport canCastle from \"./Allow castling\";\r\nimport {coverMoves} from \"../Move piece/Related with king/Check situation\";\r\n\r\nexport default function useFilterNextMoves(x, y){\r\n\r\n    let [color, piece] = gameField[y][x]\r\n\r\n    let newMoves = nextMoves.filter(([x,y])=>\r\n        x >= 0 && x < 8\r\n        && y >= 0 && y < 8\r\n        && gameField[y][x][0] !== color\r\n    )\r\n\r\n    if (piece === \"K\"){\r\n        newMoves = newMoves.filter(move => !checkForChecks(move))\r\n        newMoves.push(...canCastle(x, y))\r\n    }\r\n\r\n    else if (piece === \"P\"){\r\n        newMoves = newMoves.filter(([a, b]) => ! (a === x && gameField[b][a] !== \"0\"))\r\n    }\r\n\r\n    if (coverMoves.length && piece !== \"K\"){\r\n        let saves = coverMoves.map(elm => elm.toString())\r\n        newMoves = newMoves.filter(move => saves.includes(move.toString()))\r\n    }\r\n\r\n    if (isPiecePinned([x, y])){\r\n        console.log(color + piece, \"is Pinned\")\r\n        newMoves = newMoves.filter(move => pinFilter(move, [x,y]))\r\n    }\r\n\r\n    return newMoves\r\n\r\n}"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,yBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,UAAR,QAAyB,iDAAzB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAiC;EAE5C,IAAI,CAACC,KAAD,EAAQC,KAAR,IAAiBC,SAAS,CAACH,CAAD,CAAT,CAAaD,CAAb,CAArB;EAEA,IAAIK,QAAQ,GAAGC,SAAS,CAACC,MAAV,CAAiB;IAAA,IAAC,CAACP,CAAD,EAAGC,CAAH,CAAD;IAAA,OAC5BD,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAG,CAAd,IACGC,CAAC,IAAI,CADR,IACaA,CAAC,GAAG,CADjB,IAEGG,SAAS,CAACH,CAAD,CAAT,CAAaD,CAAb,EAAgB,CAAhB,MAAuBE,KAHE;EAAA,CAAjB,CAAf;;EAMA,IAAIC,KAAK,KAAK,GAAd,EAAkB;IACdE,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAI,CAACd,cAAc,CAACc,IAAD,CAAvC,CAAX;IACAH,QAAQ,CAACI,IAAT,CAAc,GAAGZ,SAAS,CAACG,CAAD,EAAIC,CAAJ,CAA1B;EACH,CAHD,MAKK,IAAIE,KAAK,KAAK,GAAd,EAAkB;IACnBE,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB;MAAA,IAAC,CAACG,CAAD,EAAIC,CAAJ,CAAD;MAAA,OAAY,EAAGD,CAAC,KAAKV,CAAN,IAAWI,SAAS,CAACO,CAAD,CAAT,CAAaD,CAAb,MAAoB,GAAlC,CAAZ;IAAA,CAAhB,CAAX;EACH;;EAED,IAAIZ,UAAU,CAACc,MAAX,IAAqBT,KAAK,KAAK,GAAnC,EAAuC;IACnC,IAAIU,KAAK,GAAGf,UAAU,CAACgB,GAAX,CAAeC,GAAG,IAAIA,GAAG,CAACC,QAAJ,EAAtB,CAAZ;IACAX,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIK,KAAK,CAACI,QAAN,CAAeT,IAAI,CAACQ,QAAL,EAAf,CAAxB,CAAX;EACH;;EAED,IAAIrB,aAAa,CAAC,CAACK,CAAD,EAAIC,CAAJ,CAAD,CAAjB,EAA0B;IACtBiB,OAAO,CAACC,GAAR,CAAYjB,KAAK,GAAGC,KAApB,EAA2B,WAA3B;IACAE,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIZ,SAAS,CAACY,IAAD,EAAO,CAACR,CAAD,EAAGC,CAAH,CAAP,CAAjC,CAAX;EACH;;EAED,OAAOI,QAAP;AAEH"},"metadata":{},"sourceType":"module"}