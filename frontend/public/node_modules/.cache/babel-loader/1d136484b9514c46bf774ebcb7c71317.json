{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useKingCoordinates from \"../King activity/Find king\";\nimport { turn } from \"../Move piece/Move piece\";\nexport default function pinFilter(_ref, piece) {\n  _s();\n\n  let [x, y] = _ref;\n  let [x1, y1] = piece;\n  let [x2, y2] = useKingCoordinates(turn + \"K\");\n\n  if (x1 === x2) {\n    return x === x2;\n  } else if (y1 === y2) {\n    return y === y2;\n  } else {\n    return x2 + y2 === x + y;\n  }\n}\n\n_s(pinFilter, \"N139xyYUxWVB9M41Np0z39wWmv4=\", false, function () {\n  return [useKingCoordinates];\n});","map":{"version":3,"names":["useKingCoordinates","turn","pinFilter","piece","x","y","x1","y1","x2","y2"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Pin filter.js"],"sourcesContent":["import useKingCoordinates from \"../King activity/Find king\";\r\nimport {turn} from \"../Move piece/Move piece\";\r\n\r\nexport default function pinFilter([x,y], piece){\r\n\r\n    let [x1, y1] = piece\r\n    let [x2, y2] = useKingCoordinates(turn+\"K\")\r\n\r\n    if (x1 === x2){\r\n        return x === x2\r\n    }\r\n    else if (y1 === y2){\r\n        return y === y2\r\n    }\r\n    else {\r\n        return x2 + y2 === x + y\r\n    }\r\n}"],"mappings":";;AAAA,OAAOA,kBAAP,MAA+B,4BAA/B;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AAEA,eAAe,SAASC,SAAT,OAA0BC,KAA1B,EAAgC;EAAA;;EAAA,IAAb,CAACC,CAAD,EAAGC,CAAH,CAAa;EAE3C,IAAI,CAACC,EAAD,EAAKC,EAAL,IAAWJ,KAAf;EACA,IAAI,CAACK,EAAD,EAAKC,EAAL,IAAWT,kBAAkB,CAACC,IAAI,GAAC,GAAN,CAAjC;;EAEA,IAAIK,EAAE,KAAKE,EAAX,EAAc;IACV,OAAOJ,CAAC,KAAKI,EAAb;EACH,CAFD,MAGK,IAAID,EAAE,KAAKE,EAAX,EAAc;IACf,OAAOJ,CAAC,KAAKI,EAAb;EACH,CAFI,MAGA;IACD,OAAOD,EAAE,GAAGC,EAAL,KAAYL,CAAC,GAAGC,CAAvB;EACH;AACJ;;GAduBH,S;UAGLF,kB"},"metadata":{},"sourceType":"module"}