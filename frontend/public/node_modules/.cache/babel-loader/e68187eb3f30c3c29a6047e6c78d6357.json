{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function useGetKnightMoves(x, y) {\n  _s();\n\n  const {\n    gameField\n  } = useSelector(store => store.chess);\n  return () => {\n    const moves = [[x + 2, y - 1], [x + 2, y + 1], [x - 2, y + 1], [x - 2, y - 1], [x + 1, y + 2], [x - 1, y + 2], [x + 1, y - 2], [x - 1, y - 2]];\n    return moves;\n  };\n}\n\n_s(useGetKnightMoves, \"wtbR/c4q6kwpPeTburobf501+Mk=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","useGetKnightMoves","x","y","gameField","store","chess","moves"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Piece moves/Knight.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nexport default function useGetKnightMoves(x, y) {\r\n    \r\n    const {gameField} = useSelector(store => store.chess)\r\n\r\n    return () => {\r\n    const moves = [\r\n            [x + 2, y - 1], [x + 2, y + 1],\r\n            [x - 2, y + 1], [x - 2, y - 1],\r\n            [x + 1, y + 2], [x - 1, y + 2],\r\n            [x + 1, y - 2], [x - 1, y - 2]\r\n    ]\r\n    return moves    \r\n    }\r\n\r\n\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,eAAe,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;EAAA;;EAE5C,MAAM;IAACC;EAAD,IAAcJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA/B;EAEA,OAAO,MAAM;IACb,MAAMC,KAAK,GAAG,CACN,CAACL,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CADM,EACU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CADV,EAEN,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAFM,EAEU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAFV,EAGN,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAHM,EAGU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAHV,EAIN,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAJM,EAIU,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAJV,CAAd;IAMA,OAAOI,KAAP;EACC,CARD;AAWH;;GAfuBN,iB;UAEAD,W"},"metadata":{},"sourceType":"module"}