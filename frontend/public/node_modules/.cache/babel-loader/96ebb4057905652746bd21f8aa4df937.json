{"ast":null,"code":"import { getNextMove } from \"../Next moves/NextMoves\";\nimport { checkForChecks } from \"./Checks\";\nimport { turn } from \"../Move piece/Move piece\";\nimport { coverMoves } from \"../Move piece/Related with king/Check situation\";\nimport { gameField } from \"../../Gamefield\";\nexport let kingEscape = [];\nexport function checkMate(king, check) {\n  let [x1, y1] = king;\n  let [x2, y2] = check;\n  kingEscape = [...getNextMove([x1, y1], true)];\n\n  if (checkForChecks([x1, y1]) > 1) {\n    if (kingEscape.length) {\n      coverMoves.push(\"Double mate\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  let xK = x1 === x2 ? 0 : 1;\n  let yK = y1 === y2 ? 0 : 1;\n\n  if (gameField[y2][x2][1] !== \"N\") {\n    for (let i = 1; i * xK + Math.min(x1, x2) < Math.max(x1, x2) || i * yK + Math.min(y1, y2) < Math.max(y1, y2); i++) {\n      coverMoves.push([x1 + (x1 < x2 ? i : -i) * xK, y1 + (y1 < y2 ? i : -i) * yK]);\n    }\n  }\n\n  coverMoves.push([x2, y2]);\n\n  for (let y = 0; y < 8; y++) {\n    for (let x = 0; x < 8; x++) {\n      let piece = gameField[y][x];\n\n      if (piece[0] === turn && getNextMove([x, y], true).length) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}","map":{"version":3,"names":["getNextMove","checkForChecks","turn","coverMoves","gameField","kingEscape","checkMate","king","check","x1","y1","x2","y2","length","push","xK","yK","i","Math","min","max","y","x","piece"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/King activity/Mates.js"],"sourcesContent":["import {getNextMove} from \"../Next moves/NextMoves\";\r\nimport {checkForChecks} from \"./Checks\";\r\nimport {turn} from \"../Move piece/Move piece\";\r\nimport {coverMoves} from \"../Move piece/Related with king/Check situation\";\r\nimport {gameField} from \"../../Gamefield\";\r\n\r\nexport let kingEscape = []\r\n\r\nexport function checkMate(king, check) {\r\n\r\n    let [x1, y1] = king\r\n    let [x2, y2] = check\r\n\r\n    kingEscape = [...getNextMove([x1, y1],true)]\r\n\r\n    if (checkForChecks([x1,y1]) > 1){\r\n\r\n        if (kingEscape.length) {\r\n            coverMoves.push(\"Double mate\")\r\n            return false\r\n        }\r\n        else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    let xK = x1===x2? 0: 1\r\n    let yK = y1===y2? 0: 1\r\n\r\n    if (gameField[y2][x2][1] !== \"N\"){\r\n\r\n        for (let i = 1; i * xK + Math.min(x1, x2) < Math.max(x1, x2) ||\r\n                        i * yK + Math.min(y1, y2) < Math.max(y1, y2); i++){\r\n\r\n            coverMoves.push([\r\n                x1 + (x1 < x2 ? i: -i) * xK,\r\n                y1 + (y1 < y2 ? i: -i) * yK\r\n                ]\r\n            )\r\n        }\r\n    }\r\n    coverMoves.push([x2,y2])\r\n\r\n    for (let y = 0; y < 8; y++){\r\n        for (let x = 0; x < 8; x++){\r\n\r\n            let piece = gameField[y][x]\r\n            if (piece[0] === turn && getNextMove([x,y],true).length){\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    return true\r\n}"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,yBAA1B;AACA,SAAQC,cAAR,QAA6B,UAA7B;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AACA,SAAQC,UAAR,QAAyB,iDAAzB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AAEA,OAAO,IAAIC,UAAU,GAAG,EAAjB;AAEP,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;EAEnC,IAAI,CAACC,EAAD,EAAKC,EAAL,IAAWH,IAAf;EACA,IAAI,CAACI,EAAD,EAAKC,EAAL,IAAWJ,KAAf;EAEAH,UAAU,GAAG,CAAC,GAAGL,WAAW,CAAC,CAACS,EAAD,EAAKC,EAAL,CAAD,EAAU,IAAV,CAAf,CAAb;;EAEA,IAAIT,cAAc,CAAC,CAACQ,EAAD,EAAIC,EAAJ,CAAD,CAAd,GAA0B,CAA9B,EAAgC;IAE5B,IAAIL,UAAU,CAACQ,MAAf,EAAuB;MACnBV,UAAU,CAACW,IAAX,CAAgB,aAAhB;MACA,OAAO,KAAP;IACH,CAHD,MAIK;MACD,OAAO,IAAP;IACH;EACJ;;EAED,IAAIC,EAAE,GAAGN,EAAE,KAAGE,EAAL,GAAS,CAAT,GAAY,CAArB;EACA,IAAIK,EAAE,GAAGN,EAAE,KAAGE,EAAL,GAAS,CAAT,GAAY,CAArB;;EAEA,IAAIR,SAAS,CAACQ,EAAD,CAAT,CAAcD,EAAd,EAAkB,CAAlB,MAAyB,GAA7B,EAAiC;IAE7B,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAJ,GAASG,IAAI,CAACC,GAAL,CAASV,EAAT,EAAaE,EAAb,CAAT,GAA4BO,IAAI,CAACE,GAAL,CAASX,EAAT,EAAaE,EAAb,CAA5B,IACAM,CAAC,GAAGD,EAAJ,GAASE,IAAI,CAACC,GAAL,CAAST,EAAT,EAAaE,EAAb,CAAT,GAA4BM,IAAI,CAACE,GAAL,CAASV,EAAT,EAAaE,EAAb,CAD5C,EAC8DK,CAAC,EAD/D,EACkE;MAE9Dd,UAAU,CAACW,IAAX,CAAgB,CACZL,EAAE,GAAG,CAACA,EAAE,GAAGE,EAAL,GAAUM,CAAV,GAAa,CAACA,CAAf,IAAoBF,EADb,EAEZL,EAAE,GAAG,CAACA,EAAE,GAAGE,EAAL,GAAUK,CAAV,GAAa,CAACA,CAAf,IAAoBD,EAFb,CAAhB;IAKH;EACJ;;EACDb,UAAU,CAACW,IAAX,CAAgB,CAACH,EAAD,EAAIC,EAAJ,CAAhB;;EAEA,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;IACvB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;MAEvB,IAAIC,KAAK,GAAGnB,SAAS,CAACiB,CAAD,CAAT,CAAaC,CAAb,CAAZ;;MACA,IAAIC,KAAK,CAAC,CAAD,CAAL,KAAarB,IAAb,IAAqBF,WAAW,CAAC,CAACsB,CAAD,EAAGD,CAAH,CAAD,EAAO,IAAP,CAAX,CAAwBR,MAAjD,EAAwD;QACpD,OAAO,KAAP;MACH;IACJ;EACJ;;EAED,OAAO,IAAP;AACH"},"metadata":{},"sourceType":"module"}