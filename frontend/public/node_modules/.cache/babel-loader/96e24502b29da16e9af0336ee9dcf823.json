{"ast":null,"code":"import kingCoordinates from \"../../King activity/Find king\";\nimport checkForDraw from \"../../King activity/Draw\";\nimport { checkMate } from \"../../King activity/Mates\";\nimport { checkCRD, checkForChecks } from \"../../King activity/Checks\";\nimport { turn } from \"../Move piece\";\nimport { setCheck } from \"../../../../Indicators/ShowCheck\";\nexport let coverMoves = [];\nexport const clearCoverMoves = () => coverMoves = [];\nexport default function checkSituation() {\n  clearCoverMoves();\n\n  if (checkForChecks(kingCoordinates(turn + \"K\"))) {\n    console.log(\"CHECK!\", checkCRD);\n    setCheck(kingCoordinates(turn + \"K\"));\n\n    if (checkMate(kingCoordinates(turn + \"K\"), checkCRD)) {\n      console.log(\"MATE, GAME OVER!\");\n    }\n  }\n\n  if (checkForDraw(turn) && !checkForChecks(kingCoordinates(turn + \"K\"))) {\n    console.log(\"DRAW, GAME OVER!\");\n  }\n}","map":{"version":3,"names":["kingCoordinates","checkForDraw","checkMate","checkCRD","checkForChecks","turn","setCheck","coverMoves","clearCoverMoves","checkSituation","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Move piece/Related with king/Check situation.js"],"sourcesContent":["import kingCoordinates from \"../../King activity/Find king\";\r\nimport checkForDraw from \"../../King activity/Draw\";\r\nimport {checkMate} from \"../../King activity/Mates\";\r\nimport {checkCRD, checkForChecks} from \"../../King activity/Checks\";\r\nimport {turn} from \"../Move piece\";\r\nimport {setCheck} from \"../../../../Indicators/ShowCheck\";\r\n\r\nexport let coverMoves = []\r\nexport const clearCoverMoves = () => coverMoves = []\r\n\r\nexport default function checkSituation(){\r\n\r\n    clearCoverMoves()\r\n\r\n    if (checkForChecks(kingCoordinates(turn+\"K\"))){\r\n\r\n        console.log(\"CHECK!\", checkCRD)\r\n        setCheck(kingCoordinates(turn+\"K\"))\r\n\r\n        if (checkMate(kingCoordinates(turn+\"K\"), checkCRD)){\r\n            console.log(\"MATE, GAME OVER!\")\r\n        }\r\n    }\r\n\r\n    if (checkForDraw(turn) && !checkForChecks(kingCoordinates(turn+\"K\"))){\r\n        console.log(\"DRAW, GAME OVER!\")\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,+BAA5B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAAQC,SAAR,QAAwB,2BAAxB;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,4BAAvC;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,SAAQC,QAAR,QAAuB,kCAAvB;AAEA,OAAO,IAAIC,UAAU,GAAG,EAAjB;AACP,OAAO,MAAMC,eAAe,GAAG,MAAMD,UAAU,GAAG,EAA3C;AAEP,eAAe,SAASE,cAAT,GAAyB;EAEpCD,eAAe;;EAEf,IAAIJ,cAAc,CAACJ,eAAe,CAACK,IAAI,GAAC,GAAN,CAAhB,CAAlB,EAA8C;IAE1CK,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,QAAtB;IACAG,QAAQ,CAACN,eAAe,CAACK,IAAI,GAAC,GAAN,CAAhB,CAAR;;IAEA,IAAIH,SAAS,CAACF,eAAe,CAACK,IAAI,GAAC,GAAN,CAAhB,EAA4BF,QAA5B,CAAb,EAAmD;MAC/CO,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACH;EACJ;;EAED,IAAIV,YAAY,CAACI,IAAD,CAAZ,IAAsB,CAACD,cAAc,CAACJ,eAAe,CAACK,IAAI,GAAC,GAAN,CAAhB,CAAzC,EAAqE;IACjEK,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACH;AAEJ"},"metadata":{},"sourceType":"module"}