{"ast":null,"code":"import { stateTable } from \"../../../piece\";\nimport { turn, turns } from \"../Move piece\";\nexport default async function doCastling(_ref) {\n  let [x, y] = _ref;\n  let k = x > 4 ? 1 : -1;\n  stateTable[y][4]({\n    name: turns[turn] + \"K\",\n    x: 4 + 2 * k,\n    y,\n    from: {\n      x,\n      y\n    }\n  });\n  stateTable[y][x]({\n    name: turns[turn] + \"R\",\n    x: 4 + k,\n    y,\n    from: {\n      x: 4,\n      y\n    }\n  });\n}","map":{"version":3,"names":["stateTable","turn","turns","doCastling","x","y","k","name","from"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Move piece/Related with king/Castle king.js"],"sourcesContent":["import {stateTable} from \"../../../piece\";\r\nimport {turn, turns} from \"../Move piece\";\r\n\r\nexport default async function doCastling([x, y]){\r\n\r\n    let k = x > 4 ? 1 : -1\r\n\r\n    stateTable[y][4]({\r\n            name: turns[turn] + \"K\",\r\n            x: 4 + 2 * k,\r\n            y,\r\n            from: {x, y}\r\n        })\r\n\r\n    stateTable[y][x]({\r\n            name: turns[turn] + \"R\",\r\n            x: 4 + k,\r\n            y,\r\n            from: {x: 4, y}\r\n        })\r\n}"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,gBAAzB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,eAA1B;AAEA,eAAe,eAAeC,UAAf,OAAiC;EAAA,IAAP,CAACC,CAAD,EAAIC,CAAJ,CAAO;EAE5C,IAAIC,CAAC,GAAGF,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAArB;EAEAJ,UAAU,CAACK,CAAD,CAAV,CAAc,CAAd,EAAiB;IACTE,IAAI,EAAEL,KAAK,CAACD,IAAD,CAAL,GAAc,GADX;IAETG,CAAC,EAAE,IAAI,IAAIE,CAFF;IAGTD,CAHS;IAITG,IAAI,EAAE;MAACJ,CAAD;MAAIC;IAAJ;EAJG,CAAjB;EAOAL,UAAU,CAACK,CAAD,CAAV,CAAcD,CAAd,EAAiB;IACTG,IAAI,EAAEL,KAAK,CAACD,IAAD,CAAL,GAAc,GADX;IAETG,CAAC,EAAE,IAAIE,CAFE;IAGTD,CAHS;IAITG,IAAI,EAAE;MAACJ,CAAC,EAAE,CAAJ;MAAOC;IAAP;EAJG,CAAjB;AAMH"},"metadata":{},"sourceType":"module"}