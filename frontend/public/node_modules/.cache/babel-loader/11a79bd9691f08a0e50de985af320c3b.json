{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nexport default function useGetKnightMoves(x, y) {\n  _s();\n\n  const dispatch = useDispatch();\n  const moves = [[x + 2, y - 1], [x + 2, y + 1], [x - 2, y + 1], [x - 2, y - 1], [x + 1, y + 2], [x - 1, y + 2], [x + 1, y - 2], [x - 1, y - 2]];\n  return dispatch();\n}\n\n_s(useGetKnightMoves, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","useGetKnightMoves","x","y","dispatch","moves"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Piece moves/Knight.js"],"sourcesContent":["import { useDispatch } from 'react-redux'\r\n\r\n\r\nexport default function useGetKnightMoves(x, y) {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const moves = [\r\n                [x + 2, y - 1], [x + 2, y + 1],\r\n                [x - 2, y + 1], [x - 2, y - 1],\r\n                [x + 1, y + 2], [x - 1, y + 2],\r\n                [x + 1, y - 2], [x - 1, y - 2]\r\n    ]\r\n    return dispatch()\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAGA,eAAe,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;EAAA;;EAE5C,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EAEA,MAAMK,KAAK,GAAG,CACF,CAACH,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CADE,EACc,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CADd,EAEF,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAFE,EAEc,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAFd,EAGF,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAHE,EAGc,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAHd,EAIF,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAJE,EAIc,CAACD,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,CAJd,CAAd;EAMA,OAAOC,QAAQ,EAAf;AACH;;GAXuBH,iB;UAEHD,W"},"metadata":{},"sourceType":"module"}