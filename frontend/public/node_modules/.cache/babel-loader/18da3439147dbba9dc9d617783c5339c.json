{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport gameField from './Gamefield';\nimport { current } from '@reduxjs/toolkit';\nconst turns = {\n  \"b\": \"w\",\n  \"w\": \"b\"\n};\nconst initialState = {\n  gameField,\n  turn: \"w\",\n  colors: [\"rgb(255,195,151)\", \"rgb(39,39,39)\"],\n  selected: null,\n  nextMoves: [],\n  check: null,\n  previousMove: [],\n  castlingMoved: [],\n  coverMoves: [],\n  followingPiece: {\n    target: null,\n    startingX: null,\n    startingY: null\n  }\n};\nconst gameField2 = [['0', '0', '0', '0', '0', '0', '0', 'bR'], ['0', '0', '0', '0', '0', 'bK', '0', '0'], ['0', 'wB', '0', '0', '0', '0', '0', '0'], ['0', '0', '0', '0', '0', '0', '0', '0'], ['0', '0', '0', '0', '0', '0', '0', '0'], ['0', '0', '0', '0', '0', '0', '0', '0'], ['0', '0', '0', '0', '0', '0', '0', '0'], ['0', \"0\", '0', 'wQ', 'wK', '0', '0', 'wR']];\nconst chessSlice = createSlice({\n  name: \"chess\",\n  initialState,\n  reducers: {\n    clearNextMoves: state => {\n      state.nextMoves = [];\n    },\n    setNextMoves: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.nextMoves = payload;\n    },\n    setCheck: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.check = payload;\n    },\n    setTurn: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.turn = payload;\n    },\n    setSelected: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.selected = payload;\n    },\n    setFollowing: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.followingPiece = payload;\n    },\n    movePiece: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      const [x2, y2] = payload;\n      const {\n        x,\n        y,\n        name\n      } = state.selected;\n      state.gameField[y2][x2] = name;\n      state.gameField[y][x] = \"0\";\n      state.turn = turns[state.turn];\n      state.selected = null;\n      state.nextMoves = [];\n    },\n    castle: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      const {\n        y,\n        k,\n        color\n      } = payload;\n      state.gameField[y][4 + k] = color + \"R\";\n      state.gameField[y][4 + 2 * k] = color + \"K\";\n      state.gameField[y][4] = \"0\";\n      state.gameField[y][k > 0 ? 7 : 0] = \"0\";\n      state.turn = turns[state.turn];\n      state.selected = null;\n      state.nextMoves = [];\n    }\n  }\n});\nexport default chessSlice.reducer;\nexport const {\n  clearNextMoves,\n  setNextMoves,\n  setCheck,\n  setTurn,\n  setSelected,\n  setFollowing,\n  movePiece,\n  castle\n} = chessSlice.actions;","map":{"version":3,"names":["createSlice","gameField","current","turns","initialState","turn","colors","selected","nextMoves","check","previousMove","castlingMoved","coverMoves","followingPiece","target","startingX","startingY","gameField2","chessSlice","name","reducers","clearNextMoves","state","setNextMoves","payload","setCheck","setTurn","setSelected","setFollowing","movePiece","x2","y2","x","y","castle","k","color","reducer","actions"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/features/chess/chessSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport gameField from './Gamefield'\r\n\r\nimport { current } from '@reduxjs/toolkit'\r\n\r\nconst turns = {\r\n    \"b\": \"w\",\r\n    \"w\": \"b\"\r\n}\r\n\r\nconst initialState = {\r\n    gameField,\r\n    turn: \"w\",\r\n    colors: [\r\n        \"rgb(255,195,151)\",\r\n        \"rgb(39,39,39)\"\r\n    ],\r\n    selected: null,\r\n    nextMoves: [],\r\n    check: null,\r\n    previousMove: [],\r\n    castlingMoved: [],\r\n    coverMoves: [],\r\n    followingPiece: {\r\n        target: null,\r\n        startingX: null,\r\n        startingY: null,\r\n    }\r\n\r\n}\r\n\r\nconst gameField2 = [\r\n    [ '0', '0', '0', '0', '0', '0', '0', 'bR' ],\r\n    [ '0', '0', '0', '0', '0', 'bK', '0', '0' ],\r\n    [ '0', 'wB', '0', '0', '0', '0', '0', '0' ],\r\n    [ '0', '0', '0', '0', '0', '0', '0', '0' ],\r\n    [ '0', '0', '0', '0', '0', '0', '0', '0' ],\r\n    [ '0', '0', '0', '0', '0', '0', '0', '0' ],\r\n    [ '0', '0', '0', '0', '0', '0', '0', '0' ],\r\n    [ '0', \"0\", '0', 'wQ', 'wK', '0', '0', 'wR' ]\r\n]\r\n\r\nconst chessSlice = createSlice({\r\n    name: \"chess\",\r\n    initialState,\r\n    reducers: {\r\n        clearNextMoves: (state) => {\r\n            state.nextMoves = []\r\n        },\r\n        setNextMoves: (state, {payload}) => {\r\n            state.nextMoves = payload\r\n        },\r\n        setCheck: (state, {payload}) => {\r\n            state.check = payload\r\n        },\r\n        setTurn: (state, {payload}) => {\r\n            state.turn = payload\r\n        },\r\n        setSelected: (state, { payload }) => {\r\n            state.selected = payload\r\n        },\r\n        setFollowing: (state, { payload }) => {\r\n            state.followingPiece = payload\r\n        },\r\n        movePiece: (state, { payload }) => {\r\n            const [x2, y2] = payload\r\n            const { x, y, name} = state.selected\r\n            state.gameField[y2][x2] = name\r\n            state.gameField[y][x] = \"0\"\r\n            state.turn = turns[state.turn]\r\n            state.selected = null\r\n            state.nextMoves = []\r\n        },\r\n        castle: (state, { payload }) => {\r\n            const { y, k, color } = payload\r\n            state.gameField[y][4 + k] = color + \"R\"\r\n            state.gameField[y][4 + 2 * k] = color + \"K\"\r\n            state.gameField[y][4] = \"0\"\r\n            state.gameField[y][k > 0 ? 7 : 0] = \"0\"\r\n            state.turn = turns[state.turn]\r\n            state.selected = null\r\n            state.nextMoves = []\r\n        }\r\n        \r\n    }\r\n})\r\n\r\nexport default chessSlice.reducer\r\n\r\nexport const {\r\n    clearNextMoves,\r\n    setNextMoves,\r\n    setCheck,\r\n    setTurn,\r\n    setSelected,\r\n    setFollowing,\r\n    movePiece,\r\n    castle,\r\n} = chessSlice.actions\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}