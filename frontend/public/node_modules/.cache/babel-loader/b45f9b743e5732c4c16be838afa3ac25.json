{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useIsPiecePinned from './Pinned piece';\nimport useCastling from './Castling';\nimport { useSelector } from 'react-redux';\nimport useKingCoordinates from '../King activity/King coordinates';\nimport useCheckForChecks from '../King activity/Checks';\n\nfunction pinFilter(move, piece, king) {\n  let [x, y] = move;\n  let [x1, y1] = piece;\n  let [x2, y2] = king;\n\n  if (x1 === x2) {\n    return x === x2;\n  } else if (y1 === y2) {\n    return y === y2;\n  } else {\n    return x2 + y2 === x + y;\n  }\n}\n\nexport default function useFilterNextMoves() {\n  _s();\n\n  const {\n    gameField,\n    coverMoves: _coverMoves,\n    turn\n  } = useSelector(store => store.chess);\n  const isPiecePinned = useIsPiecePinned();\n  const checkForChecks = useCheckForChecks();\n  const castling = useCastling();\n  const king = useKingCoordinates(turn + 'K');\n  return (x, y, nextMoves, coverMoves_) => {\n    const coverMoves = coverMoves_ || _coverMoves;\n    let [color, piece] = gameField[y][x];\n    let newMoves = nextMoves.filter(_ref => {\n      let [x, y] = _ref;\n      return x >= 0 && x < 8 && y >= 0 && y < 8 && gameField[y][x][0] !== color;\n    });\n\n    if (piece === 'K') {\n      newMoves = newMoves.filter(move => !checkForChecks(move).length);\n      newMoves.push(...castling(x, y));\n    }\n\n    if (piece === 'P') {\n      newMoves = newMoves.filter(_ref2 => {\n        let [a, b] = _ref2;\n        return !(a === x && gameField[b][a] !== '0');\n      });\n    }\n\n    if (coverMoves.length && piece !== 'K') {\n      let saves = coverMoves.map(elm => elm.toString());\n      newMoves = newMoves.filter(move => saves.includes(move.toString()));\n    }\n\n    if (isPiecePinned([x, y])) {\n      console.log(color + piece, 'is Pinned');\n      newMoves = newMoves.filter(move => pinFilter(move, [x, y], king));\n    }\n\n    return newMoves;\n  };\n}\n\n_s(useFilterNextMoves, \"mfedH0xANnidVfeF+WBQI+i0gvc=\", false, function () {\n  return [useSelector, useIsPiecePinned, useCheckForChecks, useCastling, useKingCoordinates];\n});","map":{"version":3,"names":["useIsPiecePinned","useCastling","useSelector","useKingCoordinates","useCheckForChecks","pinFilter","move","piece","king","x","y","x1","y1","x2","y2","useFilterNextMoves","gameField","coverMoves","_coverMoves","turn","store","chess","isPiecePinned","checkForChecks","castling","nextMoves","coverMoves_","color","newMoves","filter","length","push","a","b","saves","map","elm","toString","includes","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Chess/Pieces/Logic/Next moves/Filtration.js"],"sourcesContent":["import useIsPiecePinned from './Pinned piece'\r\nimport useCastling from './Castling'\r\nimport { useSelector } from 'react-redux'\r\nimport useKingCoordinates from '../King activity/King coordinates'\r\nimport useCheckForChecks from '../King activity/Checks'\r\n\r\nfunction pinFilter(move, piece, king) {\r\n\tlet [x, y] = move\r\n\tlet [x1, y1] = piece\r\n\tlet [x2, y2] = king\r\n\r\n\tif (x1 === x2) {\r\n\t\treturn x === x2\r\n\t} else if (y1 === y2) {\r\n\t\treturn y === y2\r\n\t} else {\r\n\t\treturn x2 + y2 === x + y\r\n\t}\r\n}\r\n\r\nexport default function useFilterNextMoves() {\r\n\tconst {\r\n\t\tgameField,\r\n\t\tcoverMoves: _coverMoves,\r\n\t\tturn,\r\n\t} = useSelector((store) => store.chess)\r\n\r\n\tconst isPiecePinned = useIsPiecePinned()\r\n\tconst checkForChecks = useCheckForChecks()\r\n\tconst castling = useCastling()\r\n\tconst king = useKingCoordinates(turn + 'K')\r\n\r\n\treturn (x, y, nextMoves, coverMoves_) => {\r\n\t\tconst coverMoves = coverMoves_ || _coverMoves\r\n\r\n\t\tlet [color, piece] = gameField[y][x]\r\n\t\tlet newMoves = nextMoves.filter(\r\n\t\t\t([x, y]) =>\r\n\t\t\t\tx >= 0 &&\r\n\t\t\t\tx < 8 &&\r\n\t\t\t\ty >= 0 &&\r\n\t\t\t\ty < 8 &&\r\n\t\t\t\tgameField[y][x][0] !== color\r\n\t\t)\r\n\r\n\t\tif (piece === 'K') {\r\n\t\t\tnewMoves = newMoves.filter((move) => !checkForChecks(move).length)\r\n\t\t\tnewMoves.push(...castling(x, y))\r\n\t\t}\r\n\r\n\t\tif (piece === 'P') {\r\n\t\t\tnewMoves = newMoves.filter(\r\n\t\t\t\t([a, b]) => !(a === x && gameField[b][a] !== '0')\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (coverMoves.length && piece !== 'K') {\r\n\t\t\tlet saves = coverMoves.map((elm) => elm.toString())\r\n\t\t\tnewMoves = newMoves.filter((move) =>\r\n\t\t\t\tsaves.includes(move.toString())\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif (isPiecePinned([x, y])) {\r\n\t\t\tconsole.log(color + piece, 'is Pinned')\r\n\t\t\tnewMoves = newMoves.filter((move) => pinFilter(move, [x, y], king))\r\n\t\t}\r\n\r\n\t\treturn newMoves\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}