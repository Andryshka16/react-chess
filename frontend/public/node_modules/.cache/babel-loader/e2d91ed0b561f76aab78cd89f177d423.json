{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport checkForChecks from \"../King activity/Checks\";\nimport useIsPiecePinned from \"./Check for pin\";\nimport pinFilter from \"./Pin filter\";\nimport canCastle from \"./Allow castling\";\nimport { useSelector } from 'react-redux';\nimport useKingCoordinates from '../King activity/Find king';\nexport default function useFilterNextMoves(x, y, nextMoves) {\n  _s();\n\n  const {\n    gameField,\n    coverMoves,\n    turn\n  } = useSelector(store => store.chess);\n  let [color, piece] = gameField[y][x];\n  const king = useKingCoordinates(turn + \"K\");\n  const isPiecePinned = useIsPiecePinned(x, y);\n  let newMoves = nextMoves.filter(_ref => {\n    let [x, y] = _ref;\n    return x >= 0 && x < 8 && y >= 0 && y < 8 && gameField[y][x][0] !== color;\n  });\n\n  if (piece === \"K\") {\n    newMoves = newMoves.filter(move => !checkForChecks(move));\n    newMoves.push(...canCastle(x, y));\n  } else if (piece === \"P\") {\n    newMoves = newMoves.filter(_ref2 => {\n      let [a, b] = _ref2;\n      return !(a === x && gameField[b][a] !== \"0\");\n    });\n  }\n\n  if (coverMoves.length && piece !== \"K\") {\n    let saves = coverMoves.map(elm => elm.toString());\n    newMoves = newMoves.filter(move => saves.includes(move.toString()));\n  }\n\n  if (isPiecePinned([x, y])) {\n    console.log(color + piece, \"is Pinned\");\n    newMoves = newMoves.filter(move => pinFilter(move, [x, y], king));\n  }\n\n  return newMoves;\n}\n\n_s(useFilterNextMoves, \"GouQHa9S12VGeUfvDKm2fjsMArk=\", false, function () {\n  return [useSelector, useKingCoordinates, useIsPiecePinned];\n});","map":{"version":3,"names":["checkForChecks","useIsPiecePinned","pinFilter","canCastle","useSelector","useKingCoordinates","useFilterNextMoves","x","y","nextMoves","gameField","coverMoves","turn","store","chess","color","piece","king","isPiecePinned","newMoves","filter","move","push","a","b","length","saves","map","elm","toString","includes","console","log"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Next moves/Filtration.js"],"sourcesContent":["import checkForChecks from \"../King activity/Checks\";\r\nimport useIsPiecePinned from \"./Check for pin\";\r\nimport pinFilter from \"./Pin filter\";\r\nimport canCastle from \"./Allow castling\";\r\nimport { useSelector } from 'react-redux';\r\nimport useKingCoordinates from '../King activity/Find king';\r\n\r\nexport default function useFilterNextMoves(x, y, nextMoves){\r\n\r\n    const { gameField, coverMoves, turn } = useSelector(store => store.chess)\r\n    let [color, piece] = gameField[y][x]\r\n    const king = useKingCoordinates(turn + \"K\")\r\n    const isPiecePinned = useIsPiecePinned(x, y)\r\n\r\n    let newMoves = nextMoves.filter(([x,y])=>\r\n        x >= 0 && x < 8\r\n        && y >= 0 && y < 8\r\n        && gameField[y][x][0] !== color\r\n    )\r\n\r\n    if (piece === \"K\"){\r\n        newMoves = newMoves.filter(move => !checkForChecks(move))\r\n        newMoves.push(...canCastle(x, y))\r\n    }\r\n\r\n    else if (piece === \"P\"){\r\n        newMoves = newMoves.filter(([a, b]) => ! (a === x && gameField[b][a] !== \"0\"))\r\n    }\r\n\r\n    if (coverMoves.length && piece !== \"K\"){\r\n        let saves = coverMoves.map(elm => elm.toString())\r\n        newMoves = newMoves.filter(move => saves.includes(move.toString()))\r\n    }\r\n\r\n    if (isPiecePinned([x, y])){\r\n        console.log(color + piece, \"is Pinned\")\r\n        newMoves = newMoves.filter(move => pinFilter(move, [x,y], king))\r\n    }\r\n\r\n    return newMoves\r\n\r\n}"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,yBAA3B;AACA,OAAOC,gBAAP,MAA6B,iBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AAEA,eAAe,SAASC,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA4C;EAAA;;EAEvD,MAAM;IAAEC,SAAF;IAAaC,UAAb;IAAyBC;EAAzB,IAAkCR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAnD;EACA,IAAI,CAACC,KAAD,EAAQC,KAAR,IAAiBN,SAAS,CAACF,CAAD,CAAT,CAAaD,CAAb,CAArB;EACA,MAAMU,IAAI,GAAGZ,kBAAkB,CAACO,IAAI,GAAG,GAAR,CAA/B;EACA,MAAMM,aAAa,GAAGjB,gBAAgB,CAACM,CAAD,EAAIC,CAAJ,CAAtC;EAEA,IAAIW,QAAQ,GAAGV,SAAS,CAACW,MAAV,CAAiB;IAAA,IAAC,CAACb,CAAD,EAAGC,CAAH,CAAD;IAAA,OAC5BD,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAG,CAAd,IACGC,CAAC,IAAI,CADR,IACaA,CAAC,GAAG,CADjB,IAEGE,SAAS,CAACF,CAAD,CAAT,CAAaD,CAAb,EAAgB,CAAhB,MAAuBQ,KAHE;EAAA,CAAjB,CAAf;;EAMA,IAAIC,KAAK,KAAK,GAAd,EAAkB;IACdG,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAI,CAACrB,cAAc,CAACqB,IAAD,CAAvC,CAAX;IACAF,QAAQ,CAACG,IAAT,CAAc,GAAGnB,SAAS,CAACI,CAAD,EAAIC,CAAJ,CAA1B;EACH,CAHD,MAKK,IAAIQ,KAAK,KAAK,GAAd,EAAkB;IACnBG,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgB;MAAA,IAAC,CAACG,CAAD,EAAIC,CAAJ,CAAD;MAAA,OAAY,EAAGD,CAAC,KAAKhB,CAAN,IAAWG,SAAS,CAACc,CAAD,CAAT,CAAaD,CAAb,MAAoB,GAAlC,CAAZ;IAAA,CAAhB,CAAX;EACH;;EAED,IAAIZ,UAAU,CAACc,MAAX,IAAqBT,KAAK,KAAK,GAAnC,EAAuC;IACnC,IAAIU,KAAK,GAAGf,UAAU,CAACgB,GAAX,CAAeC,GAAG,IAAIA,GAAG,CAACC,QAAJ,EAAtB,CAAZ;IACAV,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIK,KAAK,CAACI,QAAN,CAAeT,IAAI,CAACQ,QAAL,EAAf,CAAxB,CAAX;EACH;;EAED,IAAIX,aAAa,CAAC,CAACX,CAAD,EAAIC,CAAJ,CAAD,CAAjB,EAA0B;IACtBuB,OAAO,CAACC,GAAR,CAAYjB,KAAK,GAAGC,KAApB,EAA2B,WAA3B;IACAG,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAInB,SAAS,CAACmB,IAAD,EAAO,CAACd,CAAD,EAAGC,CAAH,CAAP,EAAcS,IAAd,CAAjC,CAAX;EACH;;EAED,OAAOE,QAAP;AAEH;;GAlCuBb,kB;UAEoBF,W,EAE3BC,kB,EACSJ,gB"},"metadata":{},"sourceType":"module"}