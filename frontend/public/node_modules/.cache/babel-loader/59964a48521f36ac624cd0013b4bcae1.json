{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import {clearField} from \"../../../Indicators/ShowNextMoves\";\n// import togglePointerEvents from \"../Pawn promotion/togglePointerEvents\";\n// import doCastling from \"./Related with king/Castle king\";\n// import removePiece from \"./Remove piece\";\n// import maybeCastlingPiecesMoved from \"./Related with king/Mby castling pieces moved\";\n// import updateState from \"./Update state\";\n// import {recentPieceCrd} from \"../../piece\";\n// import {gameField} from \"../../Gamefield\";\n// import {setPromoted} from \"../Pawn promotion/Promotion\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { movePiece } from '../../../../../features/chess/chessSlice';\nexport let turn = 'w';\nexport const turns = {\n  w: 'b',\n  b: 'w'\n};\nexport let enPassing;\nexport let castlingMoved = [];\nexport let clearCastlingMoved = () => castlingMoved = [];\nexport default function useMovePiece() {\n  _s();\n\n  const dispatch = useDispatch();\n  return (x2, y2) => {\n    // enPassing = name === \"P\" &&\n    //     Math.abs(y2 - y1) === 2 ?\n    //         {x: x2, y: y2} : false\n    // if (name === \"P\"  && (y2 === 7 || y2 === 0)){\n    //     setPromoted([x2, y2])\n    //     togglePointerEvents(\"none\")\n    // }\n    // maybeCastlingPiecesMoved(color, name, x1)\n    dispatch(movePiece([x2, y2]));\n  };\n}\n\n_s(useMovePiece, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","useSelector","movePiece","turn","turns","w","b","enPassing","castlingMoved","clearCastlingMoved","useMovePiece","dispatch","x2","y2"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Pieces/Logic/Move piece/Move piece.js"],"sourcesContent":["// import {clearField} from \"../../../Indicators/ShowNextMoves\";\n// import togglePointerEvents from \"../Pawn promotion/togglePointerEvents\";\n// import doCastling from \"./Related with king/Castle king\";\n// import removePiece from \"./Remove piece\";\n// import maybeCastlingPiecesMoved from \"./Related with king/Mby castling pieces moved\";\n// import updateState from \"./Update state\";\n// import {recentPieceCrd} from \"../../piece\";\n// import {gameField} from \"../../Gamefield\";\n// import {setPromoted} from \"../Pawn promotion/Promotion\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { movePiece } from '../../../../../features/chess/chessSlice'\n\nexport let turn = 'w'\n\nexport const turns = { w: 'b', b: 'w' }\n\nexport let enPassing\nexport let castlingMoved = []\nexport let clearCastlingMoved = () => (castlingMoved = [])\n\nexport default function useMovePiece() {\n\tconst dispatch = useDispatch()\n\n\treturn (x2, y2) => {\n\t\t// enPassing = name === \"P\" &&\n\t\t//     Math.abs(y2 - y1) === 2 ?\n\t\t//         {x: x2, y: y2} : false\n\n\t\t// if (name === \"P\"  && (y2 === 7 || y2 === 0)){\n\t\t//     setPromoted([x2, y2])\n\t\t//     togglePointerEvents(\"none\")\n\t\t// }\n\n\t\t// maybeCastlingPiecesMoved(color, name, x1)\n\n\t\tdispatch(movePiece([x2, y2]))\n\t}\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,0CAA1B;AAEA,OAAO,IAAIC,IAAI,GAAG,GAAX;AAEP,OAAO,MAAMC,KAAK,GAAG;EAAEC,CAAC,EAAE,GAAL;EAAUC,CAAC,EAAE;AAAb,CAAd;AAEP,OAAO,IAAIC,SAAJ;AACP,OAAO,IAAIC,aAAa,GAAG,EAApB;AACP,OAAO,IAAIC,kBAAkB,GAAG,MAAOD,aAAa,GAAG,EAAhD;AAEP,eAAe,SAASE,YAAT,GAAwB;EAAA;;EACtC,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EAEA,OAAO,CAACY,EAAD,EAAKC,EAAL,KAAY;IAClB;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAEAF,QAAQ,CAACT,SAAS,CAAC,CAACU,EAAD,EAAKC,EAAL,CAAD,CAAV,CAAR;EACA,CAbD;AAcA;;GAjBuBH,Y;UACNV,W"},"metadata":{},"sourceType":"module"}