{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alapc\\\\OneDrive\\\\Documents\\\\Programming\\\\chess\\\\src\\\\Chessboard\\\\Game\\\\Eaten pieces\\\\Eaten pieces.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Pieces from \"./Killed pieces\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let killed, setKilled;\nexport default function EatenPieces(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  [killed, setKilled] = useState([]);\n  const value = {\n    \"P\": 1,\n    \"B\": 3,\n    \"N\": 3,\n    \"R\": 5,\n    \"Q\": 9\n  };\n  const white = killed.filter(n => n[0] === \"w\");\n  const black = killed.filter(n => n[0] === \"b\");\n  const whiteValue = white.map(i => value[i[1]]).reduce((a, b) => a + b, 0);\n  const blackValue = black.map(i => value[i[1]]).reduce((a, b) => a + b, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pieces, {\n      arr: white,\n      dif: whiteValue - blackValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), children, /*#__PURE__*/_jsxDEV(Pieces, {\n      arr: black,\n      dif: blackValue - whiteValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EatenPieces, \"4bWmwqNpSmwrWYwBxf0uO8LDcFo=\");\n\n_c = EatenPieces;\n\nvar _c;\n\n$RefreshReg$(_c, \"EatenPieces\");","map":{"version":3,"names":["useState","Pieces","killed","setKilled","EatenPieces","children","value","white","filter","n","black","whiteValue","map","i","reduce","a","b","blackValue"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/Chessboard/Game/Eaten pieces/Eaten pieces.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport Pieces from \"./Killed pieces\";\r\n\r\nexport let killed, setKilled\r\n\r\nexport default function EatenPieces({children}) {\r\n\r\n    [killed, setKilled] = useState([])\r\n\r\n\r\n    const value = {\r\n        \"P\": 1,\r\n        \"B\": 3,\r\n        \"N\": 3,\r\n        \"R\": 5,\r\n        \"Q\": 9,\r\n    }\r\n\r\n    const white = killed.filter(n => n[0] === \"w\")\r\n    const black = killed.filter(n => n[0] === \"b\")\r\n\r\n    const whiteValue = white.map(i => value[i[1]]).reduce((a, b) => a + b, 0)\r\n    const blackValue = black.map(i => value[i[1]]).reduce((a, b) => a + b, 0)\r\n\r\n    return (\r\n        <>\r\n            <Pieces arr={white} dif={whiteValue - blackValue}/>\r\n                {children}\r\n            <Pieces arr={black} dif={blackValue - whiteValue}/>\r\n        </>\r\n    )\r\n}"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,OAAO,IAAIC,MAAJ,EAAYC,SAAZ;AAEP,eAAe,SAASC,WAAT,OAAiC;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAE5C,CAACH,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAA9B;EAGA,MAAMM,KAAK,GAAG;IACV,KAAK,CADK;IAEV,KAAK,CAFK;IAGV,KAAK,CAHK;IAIV,KAAK,CAJK;IAKV,KAAK;EALK,CAAd;EAQA,MAAMC,KAAK,GAAGL,MAAM,CAACM,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,GAA5B,CAAd;EACA,MAAMC,KAAK,GAAGR,MAAM,CAACM,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,GAA5B,CAAd;EAEA,MAAME,UAAU,GAAGJ,KAAK,CAACK,GAAN,CAAUC,CAAC,IAAIP,KAAK,CAACO,CAAC,CAAC,CAAD,CAAF,CAApB,EAA4BC,MAA5B,CAAmC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAjD,EAAoD,CAApD,CAAnB;EACA,MAAMC,UAAU,GAAGP,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAIP,KAAK,CAACO,CAAC,CAAC,CAAD,CAAF,CAApB,EAA4BC,MAA5B,CAAmC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAjD,EAAoD,CAApD,CAAnB;EAEA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAQ,GAAG,EAAET,KAAb;MAAoB,GAAG,EAAEI,UAAU,GAAGM;IAAtC;MAAA;MAAA;MAAA;IAAA,QADJ,EAESZ,QAFT,eAGI,QAAC,MAAD;MAAQ,GAAG,EAAEK,KAAb;MAAoB,GAAG,EAAEO,UAAU,GAAGN;IAAtC;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA,gBADJ;AAOH;;GA1BuBP,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}