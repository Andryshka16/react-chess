{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport gameField from './Gamefield';\nimport { current } from '@reduxjs/toolkit';\nconst turns = {\n  b: 'w',\n  w: 'b'\n};\nconst initialState = {\n  gameField,\n  turn: 'w',\n  colors: ['rgb(255,195,151)', 'rgb(39,39,39)'],\n  selected: null,\n  nextMoves: [],\n  check: null,\n  previousMove: [],\n  castlingMoved: [],\n  promoted: null,\n  coverMoves: [],\n  enpassing: null\n};\nconst chessSlice = createSlice({\n  name: 'chess',\n  initialState,\n  reducers: {\n    clearNextMoves: state => {\n      state.nextMoves = [];\n    },\n    setNextMoves: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.nextMoves = payload;\n    },\n    setCheck: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.check = payload;\n    },\n    setTurn: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.turn = payload;\n    },\n    setSelected: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.selected = payload;\n    },\n    setFollowing: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.followingPiece = payload;\n    },\n    setPromoted: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n\n      if (!payload) {\n        const {\n          x1,\n          y1,\n          name\n        } = state.promoted;\n        state.gameField[y1][x1] = name;\n        state.promoted = payload;\n        state.turn = turns[state.turn];\n      } else if (payload.length > 1) {\n        state.promoted = payload;\n      } else {\n        const {\n          x2,\n          y2\n        } = state.promoted;\n        state.gameField[y2][x2] = payload.name;\n        state.promoted = null;\n      }\n    },\n    setCoverMoves: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.coverMoves = payload;\n    },\n    movePiece: (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      const [x2, y2] = payload;\n      const {\n        x1,\n        y1,\n        name\n      } = state.selected;\n      const [color, piece] = name;\n\n      if (piece === 'K' && Math.abs(x2 - x1) > 1) {\n        const k = x2 > x1 ? 1 : -1;\n        state.gameField[y1][4 + k] = color + 'R';\n        state.gameField[y1][4 + 2 * k] = color + 'K';\n        state.gameField[y1][4] = '0';\n        state.gameField[y1][k > 0 ? 7 : 0] = '0';\n      } else if (piece === 'P' && x1 !== x2 && state.gameField[y2][x2] === '0') {\n        state.gameField[y1][x2] = '0';\n        state.gameField[y2][x2] = name;\n        state.gameField[y1][x1] = '0';\n      }\n\n      if (piece === 'P' && (y2 === 7 || y2 === 0)) {\n        state.promoted = {\n          x1,\n          y1,\n          x2,\n          y2,\n          name\n        };\n        state.gameField[y1][x1] = '0';\n      } else {\n        state.gameField[y2][x2] = name;\n        state.gameField[y1][x1] = '0';\n      }\n\n      if (piece === 'R' && (x1 === 0 || x1 === 7) && !state.castlingMoved.includes(x1 + name)) {\n        state.castlingMoved.push(x1 + name);\n      } else if (piece === 'K' && x1 === 4 && !state.castlingMoved.includes(name)) {\n        state.castlingMoved.push(name);\n      }\n\n      state.enPassing = name[1] === 'P' && Math.abs(y2 - y1) === 2 ? {\n        x2,\n        y2\n      } : null;\n      state.turn = turns[state.turn];\n      state.selected = null;\n      state.coverMoves = [];\n      state.nextMoves = [];\n    }\n  }\n});\nexport default chessSlice.reducer;\nexport const {\n  clearNextMoves,\n  setNextMoves,\n  setCheck,\n  setTurn,\n  setSelected,\n  setFollowing,\n  setCoverMoves,\n  movePiece,\n  castle,\n  setPromoted\n} = chessSlice.actions;","map":{"version":3,"names":["createSlice","gameField","current","turns","b","w","initialState","turn","colors","selected","nextMoves","check","previousMove","castlingMoved","promoted","coverMoves","enpassing","chessSlice","name","reducers","clearNextMoves","state","setNextMoves","payload","setCheck","setTurn","setSelected","setFollowing","followingPiece","setPromoted","x1","y1","length","x2","y2","setCoverMoves","movePiece","color","piece","Math","abs","k","includes","push","enPassing","reducer","castle","actions"],"sources":["C:/Users/alapc/OneDrive/Documents/Programming/chess/src/features/chess/chessSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport gameField from './Gamefield'\r\n\r\nimport { current } from '@reduxjs/toolkit'\r\n\r\nconst turns = {\r\n\tb: 'w',\r\n\tw: 'b',\r\n}\r\n\r\nconst initialState = {\r\n\tgameField,\r\n\tturn: 'w',\r\n\tcolors: ['rgb(255,195,151)', 'rgb(39,39,39)'],\r\n\tselected: null,\r\n\tnextMoves: [],\r\n\tcheck: null,\r\n\tpreviousMove: [],\r\n\tcastlingMoved: [],\r\n\tpromoted: null,\r\n\tcoverMoves: [],\r\n\tenpassing: null,\r\n}\r\n\r\nconst chessSlice = createSlice({\r\n\tname: 'chess',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tclearNextMoves: (state) => {\r\n\t\t\tstate.nextMoves = []\r\n\t\t},\r\n\t\tsetNextMoves: (state, { payload }) => {\r\n\t\t\tstate.nextMoves = payload\r\n\t\t},\r\n\t\tsetCheck: (state, { payload }) => {\r\n\t\t\tstate.check = payload\r\n\t\t},\r\n\t\tsetTurn: (state, { payload }) => {\r\n\t\t\tstate.turn = payload\r\n\t\t},\r\n\t\tsetSelected: (state, { payload }) => {\r\n\t\t\tstate.selected = payload\r\n\t\t},\r\n\t\tsetFollowing: (state, { payload }) => {\r\n\t\t\tstate.followingPiece = payload\r\n\t\t},\r\n\t\tsetPromoted: (state, { payload }) => {\r\n\t\t\tif (!payload) {\r\n\t\t\t\tconst { x1, y1, name} = state.promoted\r\n\t\t\t\tstate.gameField[y1][x1] = name\r\n\t\t\t\tstate.promoted = payload\r\n\t\t\t\tstate.turn = turns[state.turn]\r\n\t\t\t} else if (payload.length > 1) {\r\n\t\t\t\tstate.promoted = payload\r\n\t\t\t} else {\r\n\t\t\t\tconst { x2, y2 } = state.promoted\r\n\t\t\t\tstate.gameField[y2][x2] = payload.name\r\n\t\t\t\tstate.promoted = null\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCoverMoves: (state, { payload }) => {\r\n\t\t\tstate.coverMoves = payload\r\n\t\t},\r\n\t\tmovePiece: (state, { payload }) => {\r\n\t\t\tconst [x2, y2] = payload\r\n\t\t\tconst { x1, y1, name } = state.selected\r\n\t\t\tconst [color, piece] = name\r\n\r\n\t\t\tif (piece === 'K' && Math.abs(x2 - x1) > 1) {\r\n\t\t\t\tconst k = x2 > x1 ? 1 : -1\r\n\t\t\t\tstate.gameField[y1][4 + k] = color + 'R'\r\n\t\t\t\tstate.gameField[y1][4 + 2 * k] = color + 'K'\r\n\t\t\t\tstate.gameField[y1][4] = '0'\r\n\t\t\t\tstate.gameField[y1][k > 0 ? 7 : 0] = '0'\r\n\t\t\t} else if (\r\n\t\t\t\tpiece === 'P' &&\r\n\t\t\t\tx1 !== x2 &&\r\n\t\t\t\tstate.gameField[y2][x2] === '0'\r\n\t\t\t) {\r\n\t\t\t\tstate.gameField[y1][x2] = '0'\r\n\t\t\t\tstate.gameField[y2][x2] = name\r\n\t\t\t\tstate.gameField[y1][x1] = '0'\r\n\t\t\t}\r\n\r\n\t\t\tif (piece === 'P' && (y2 === 7 || y2 === 0)) {\r\n\t\t\t\tstate.promoted = { x1, y1, x2, y2, name }\r\n\t\t\t\tstate.gameField[y1][x1] = '0'\r\n\t\t\t} else {\r\n\t\t\t\tstate.gameField[y2][x2] = name\r\n\t\t\t\tstate.gameField[y1][x1] = '0'\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tpiece === 'R' &&\r\n\t\t\t\t(x1 === 0 || x1 === 7) &&\r\n\t\t\t\t!state.castlingMoved.includes(x1 + name)\r\n\t\t\t) {\r\n\t\t\t\tstate.castlingMoved.push(x1 + name)\r\n\t\t\t} else if (\r\n\t\t\t\tpiece === 'K' &&\r\n\t\t\t\tx1 === 4 &&\r\n\t\t\t\t!state.castlingMoved.includes(name)\r\n\t\t\t) {\r\n\t\t\t\tstate.castlingMoved.push(name)\r\n\t\t\t}\r\n\r\n\t\t\tstate.enPassing =\r\n\t\t\t\tname[1] === 'P' && Math.abs(y2 - y1) === 2 ? { x2, y2 } : null\r\n\r\n\t\t\tstate.turn = turns[state.turn]\r\n\t\t\tstate.selected = null\r\n\t\t\tstate.coverMoves = []\r\n\t\t\tstate.nextMoves = []\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default chessSlice.reducer\r\n\r\nexport const {\r\n\tclearNextMoves,\r\n\tsetNextMoves,\r\n\tsetCheck,\r\n\tsetTurn,\r\n\tsetSelected,\r\n\tsetFollowing,\r\n\tsetCoverMoves,\r\n\tmovePiece,\r\n\tcastle,\r\n\tsetPromoted,\r\n} = chessSlice.actions\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}